{
  "address": "0x17F24D3b8Bc1150553b54Da30B4d993AcB889212",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizationCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizationUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "Blacklisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newBlacklister",
          "type": "address"
        }
      ],
      "name": "BlacklisterChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMasterMinter",
          "type": "address"
        }
      ],
      "name": "MasterMinterChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minterAllowedAmount",
          "type": "uint256"
        }
      ],
      "name": "MinterConfigured",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMinter",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "PauserChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRescuer",
          "type": "address"
        }
      ],
      "name": "RescuerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "UnBlacklisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CANCEL_AUTHORIZATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RECEIVE_WITH_AUTHORIZATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSFER_WITH_AUTHORIZATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        }
      ],
      "name": "authorizationState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "blacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blacklister",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "cancelAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minterAllowedAmount",
          "type": "uint256"
        }
      ],
      "name": "configureMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currency",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "decrement",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "increment",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenCurrency",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "tokenDecimals",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "newMasterMinter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newPauser",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newBlacklister",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newName",
          "type": "string"
        }
      ],
      "name": "initializeV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lostAndFound",
          "type": "address"
        }
      ],
      "name": "initializeV2_1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isBlacklisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "masterMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "minterAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validAfter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validBefore",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "receiveWithAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "rescueERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rescuer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validAfter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validBefore",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "transferWithAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "unBlacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newBlacklister",
          "type": "address"
        }
      ],
      "name": "updateBlacklister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newMasterMinter",
          "type": "address"
        }
      ],
      "name": "updateMasterMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newPauser",
          "type": "address"
        }
      ],
      "name": "updatePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newRescuer",
          "type": "address"
        }
      ],
      "name": "updateRescuer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xcfda17e4f69b72c36a3593385105f88c467f18e153987d324c0b7501a4dc5d6c",
  "receipt": {
    "to": null,
    "from": "0x1CBd3b2770909D4e10f157cABC84C7264073C9Ec",
    "contractAddress": "0x17F24D3b8Bc1150553b54Da30B4d993AcB889212",
    "transactionIndex": 0,
    "gasUsed": "3609980",
    "logsBloom": "0x
    "blockHash": "0x1b776fd3953b4c76646e51eda381ddbfa300eacf59ab23ecdfb5c430bdf4fe3f",
    "transactionHash": "0xcfda17e4f69b72c36a3593385105f88c467f18e153987d324c0b7501a4dc5d6c",
    "logs": [],
    "blockNumber": 175144198,
    "cumulativeGasUsed": "3609980",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7adca55a869f291c5100e060055a8f6c",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"AuthorizationCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"AuthorizationUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBlacklister\",\"type\":\"address\"}],\"name\":\"BlacklisterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMasterMinter\",\"type\":\"address\"}],\"name\":\"MasterMinterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minterAllowedAmount\",\"type\":\"uint256\"}],\"name\":\"MinterConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMinter\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PauserChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRescuer\",\"type\":\"address\"}],\"name\":\"RescuerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"UnBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CANCEL_AUTHORIZATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RECEIVE_WITH_AUTHORIZATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_WITH_AUTHORIZATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"authorizationState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blacklister\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"cancelAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minterAllowedAmount\",\"type\":\"uint256\"}],\"name\":\"configureMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currency\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decrement\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"increment\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenCurrency\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"newMasterMinter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newBlacklister\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"initializeV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lostAndFound\",\"type\":\"address\"}],\"name\":\"initializeV2_1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"minterAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validBefore\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"receiveWithAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rescuer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validBefore\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"transferWithAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"unBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBlacklister\",\"type\":\"address\"}],\"name\":\"updateBlacklister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMasterMinter\",\"type\":\"address\"}],\"name\":\"updateMasterMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPauser\",\"type\":\"address\"}],\"name\":\"updatePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRescuer\",\"type\":\"address\"}],\"name\":\"updateRescuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"Token owner's address\",\"spender\":\"Spender's address\"},\"returns\":{\"_0\":\"Allowance amount\"}},\"approve(address,uint256)\":{\"params\":{\"spender\":\"Spender's address\",\"value\":\"Allowance amount\"},\"returns\":{\"_0\":\"True if successful\"}},\"authorizationState(address,bytes32)\":{\"details\":\"Nonces are randomly generated 32-byte data unique to the authorizer's address\",\"params\":{\"authorizer\":\"Authorizer's address\",\"nonce\":\"Nonce of the authorization\"},\"returns\":{\"_0\":\"True if the nonce is used\"}},\"balanceOf(address)\":{\"details\":\"Get token balance of an account\",\"params\":{\"account\":\"address The account\"}},\"blacklist(address)\":{\"details\":\"Adds account to blacklist\",\"params\":{\"_account\":\"The address to blacklist\"}},\"burn(uint256)\":{\"details\":\"allows a minter to burn some of its own tokens Validates that caller is a minter and that sender is not blacklisted amount is less than or equal to the minter's account balance\",\"params\":{\"_amount\":\"uint256 the amount of tokens to be burned\"}},\"cancelAuthorization(address,bytes32,uint8,bytes32,bytes32)\":{\"details\":\"Works only if the authorization is not yet used.\",\"params\":{\"authorizer\":\"Authorizer's address\",\"nonce\":\"Nonce of the authorization\",\"r\":\"r of the signature\",\"s\":\"s of the signature\",\"v\":\"v of the signature\"}},\"configureMinter(address,uint256)\":{\"details\":\"Function to add/update a new minter\",\"params\":{\"minter\":\"The address of the minter\",\"minterAllowedAmount\":\"The minting amount allowed for the minter\"},\"returns\":{\"_0\":\"True if the operation was successful.\"}},\"decreaseAllowance(address,uint256)\":{\"params\":{\"decrement\":\"Amount of decrease in allowance\",\"spender\":\"Spender's address\"},\"returns\":{\"_0\":\"True if successful\"}},\"increaseAllowance(address,uint256)\":{\"params\":{\"increment\":\"Amount of increase in allowance\",\"spender\":\"Spender's address\"},\"returns\":{\"_0\":\"True if successful\"}},\"initializeV2(string)\":{\"params\":{\"newName\":\"New token name\"}},\"initializeV2_1(address)\":{\"params\":{\"lostAndFound\":\"The address to which the locked funds are sent\"}},\"isBlacklisted(address)\":{\"details\":\"Checks if account is blacklisted\",\"params\":{\"_account\":\"The address to check\"}},\"isMinter(address)\":{\"details\":\"Checks if account is a minter\",\"params\":{\"account\":\"The address to check\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"_amount\":\"The amount of tokens to mint. Must be less than or equal to the minterAllowance of the caller.\",\"_to\":\"The address that will receive the minted tokens.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"minterAllowance(address)\":{\"details\":\"Get minter allowance for an account\",\"params\":{\"minter\":\"The address of the minter\"}},\"nonces(address)\":{\"params\":{\"owner\":\"Token owner's address (Authorizer)\"},\"returns\":{\"_0\":\"Next nonce\"}},\"owner()\":{\"details\":\"Tells the address of the owner\",\"returns\":{\"_0\":\"the address of the owner\"}},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"Expiration time, seconds since the epoch\",\"owner\":\"Token owner's address (Authorizer)\",\"r\":\"r of the signature\",\"s\":\"s of the signature\",\"spender\":\"Spender's address\",\"v\":\"v of the signature\",\"value\":\"Amount of allowance\"}},\"receiveWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)\":{\"details\":\"This has an additional check to ensure that the payee's address matches the caller of this function to prevent front-running attacks.\",\"params\":{\"from\":\"Payer's address (Authorizer)\",\"nonce\":\"Unique nonce\",\"r\":\"r of the signature\",\"s\":\"s of the signature\",\"to\":\"Payee's address\",\"v\":\"v of the signature\",\"validAfter\":\"The time after which this is valid (unix time)\",\"validBefore\":\"The time before which this is valid (unix time)\",\"value\":\"Amount to be transferred\"}},\"removeMinter(address)\":{\"details\":\"Function to remove a minter\",\"params\":{\"minter\":\"The address of the minter to remove\"},\"returns\":{\"_0\":\"True if the operation was successful.\"}},\"rescueERC20(address,address,uint256)\":{\"params\":{\"amount\":\"Amount to withdraw\",\"to\":\"Recipient address\",\"tokenContract\":\"ERC20 token contract address\"}},\"rescuer()\":{\"returns\":{\"_0\":\"Rescuer's address\"}},\"totalSupply()\":{\"details\":\"Get totalSupply of token\"},\"transfer(address,uint256)\":{\"params\":{\"to\":\"Payee's address\",\"value\":\"Transfer amount\"},\"returns\":{\"_0\":\"True if successful\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"from\":\"Payer's address\",\"to\":\"Payee's address\",\"value\":\"Transfer amount\"},\"returns\":{\"_0\":\"True if successful\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"transferWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)\":{\"params\":{\"from\":\"Payer's address (Authorizer)\",\"nonce\":\"Unique nonce\",\"r\":\"r of the signature\",\"s\":\"s of the signature\",\"to\":\"Payee's address\",\"v\":\"v of the signature\",\"validAfter\":\"The time after which this is valid (unix time)\",\"validBefore\":\"The time before which this is valid (unix time)\",\"value\":\"Amount to be transferred\"}},\"unBlacklist(address)\":{\"details\":\"Removes account from blacklist\",\"params\":{\"_account\":\"The address to remove from the blacklist\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"},\"updatePauser(address)\":{\"details\":\"update the pauser role\"},\"updateRescuer(address)\":{\"params\":{\"newRescuer\":\"New rescuer's address\"}},\"version()\":{\"returns\":{\"_0\":\"Version string\"}}},\"title\":\"FiatToken V2.1\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Amount of remaining tokens spender is allowed to transfer on behalf of the token owner\"},\"approve(address,uint256)\":{\"notice\":\"Set spender's allowance over the caller's tokens to be a given value.\"},\"authorizationState(address,bytes32)\":{\"notice\":\"Returns the state of an authorization\"},\"cancelAuthorization(address,bytes32,uint8,bytes32,bytes32)\":{\"notice\":\"Attempt to cancel an authorization\"},\"decreaseAllowance(address,uint256)\":{\"notice\":\"Decrease the allowance by a given decrement\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"Increase the allowance by a given increment\"},\"initializeV2(string)\":{\"notice\":\"Initialize v2\"},\"initializeV2_1(address)\":{\"notice\":\"Initialize v2.1\"},\"nonces(address)\":{\"notice\":\"Nonces for permit\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Update allowance with a signed permit\"},\"receiveWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)\":{\"notice\":\"Receive a transfer with a signed authorization from the payer\"},\"rescueERC20(address,address,uint256)\":{\"notice\":\"Rescue ERC20 tokens locked up in this contract.\"},\"rescuer()\":{\"notice\":\"Returns current rescuer\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer tokens from the caller\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer tokens by spending allowance\"},\"transferWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)\":{\"notice\":\"Execute a transfer with a signed authorization\"},\"updateRescuer(address)\":{\"notice\":\"Assign the rescuer role to a given address.\"},\"version()\":{\"notice\":\"Version string for the EIP712 domain separator\"}},\"notice\":\"ERC20 Token backed by fiat reserves, version 2.1\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/USDC.sol\":\"FiatTokenV2_1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/USDC.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at Etherscan.io on 2021-04-17\\r\\n */\\r\\n\\r\\n// File: @openzeppelin/contracts/math/SafeMath.sol\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.6.0;\\r\\n\\r\\n/**\\r\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\r\\n * checks.\\r\\n *\\r\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\r\\n * in bugs, because programmers usually assume that an overflow raises an\\r\\n * error, which is the standard behavior in high level programming languages.\\r\\n * `SafeMath` restores this intuition by reverting the transaction when an\\r\\n * operation overflows.\\r\\n *\\r\\n * Using this library instead of the unchecked operations eliminates an entire\\r\\n * class of bugs, so it's recommended to use it always.\\r\\n */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\\r\\n\\r\\npragma solidity ^0.6.0;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\n// File: contracts/v1/AbstractFiatTokenV1.sol\\r\\n\\r\\n/**\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\nabstract contract AbstractFiatTokenV1 is IERC20 {\\r\\n    function _approve(address owner, address spender, uint256 value) internal virtual;\\r\\n\\r\\n    function _transfer(address from, address to, uint256 value) internal virtual;\\r\\n}\\r\\n\\r\\n// File: contracts/v1/Ownable.sol\\r\\n\\r\\n/**\\r\\n * Copyright (c) 2018 zOS Global Limited.\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/**\\r\\n * @notice The Ownable contract has an owner address, and provides basic\\r\\n * authorization control functions\\r\\n * @dev Forked from https://github.com/OpenZeppelin/openzeppelin-labs/blob/3887ab77b8adafba4a26ace002f3a684c1a3388b/upgradeability_ownership/contracts/ownership/Ownable.sol\\r\\n * Modifications:\\r\\n * 1. Consolidate OwnableStorage into this contract (7/13/18)\\r\\n * 2. Reformat, conform to Solidity 0.6 syntax, and add error messages (5/13/20)\\r\\n * 3. Make public functions external (5/27/20)\\r\\n */\\r\\ncontract Ownable {\\r\\n    // Owner of the contract\\r\\n    address private _owner;\\r\\n\\r\\n    /**\\r\\n     * @dev Event to show ownership has been transferred\\r\\n     * @param previousOwner representing the address of the previous owner\\r\\n     * @param newOwner representing the address of the new owner\\r\\n     */\\r\\n    event OwnershipTransferred(address previousOwner, address newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev The constructor sets the original owner of the contract to the sender account.\\r\\n     */\\r\\n    constructor() public {\\r\\n        setOwner(msg.sender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Tells the address of the owner\\r\\n     * @return the address of the owner\\r\\n     */\\r\\n    function owner() external view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets a new owner address\\r\\n     */\\r\\n    function setOwner(address newOwner) internal {\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == _owner, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n     * @param newOwner The address to transfer ownership to.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) external onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        setOwner(newOwner);\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: contracts/v1/Pausable.sol\\r\\n\\r\\n/**\\r\\n * Copyright (c) 2016 Smart Contract Solutions, Inc.\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ0\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/**\\r\\n * @notice Base contract which allows children to implement an emergency stop\\r\\n * mechanism\\r\\n * @dev Forked from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/feb665136c0dae9912e08397c1a21c4af3651ef3/contracts/lifecycle/Pausable.sol\\r\\n * Modifications:\\r\\n * 1. Added pauser role, switched pause/unpause to be onlyPauser (6/14/2018)\\r\\n * 2. Removed whenNotPause/whenPaused from pause/unpause (6/14/2018)\\r\\n * 3. Removed whenPaused (6/14/2018)\\r\\n * 4. Switches ownable library to use ZeppelinOS (7/12/18)\\r\\n * 5. Remove constructor (7/13/18)\\r\\n * 6. Reformat, conform to Solidity 0.6 syntax and add error messages (5/13/20)\\r\\n * 7. Make public functions external (5/27/20)\\r\\n */\\r\\ncontract Pausable is Ownable {\\r\\n    event Pause();\\r\\n    event Unpause();\\r\\n    event PauserChanged(address indexed newAddress);\\r\\n\\r\\n    address public pauser;\\r\\n    bool public paused = false;\\r\\n\\r\\n    /**\\r\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n     */\\r\\n    modifier whenNotPaused() {\\r\\n        require(!paused, \\\"Pausable: paused\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev throws if called by any account other than the pauser\\r\\n     */\\r\\n    modifier onlyPauser() {\\r\\n        require(msg.sender == pauser, \\\"Pausable: caller is not the pauser\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev called by the owner to pause, triggers stopped state\\r\\n     */\\r\\n    function pause() external onlyPauser {\\r\\n        paused = true;\\r\\n        emit Pause();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev called by the owner to unpause, returns to normal state\\r\\n     */\\r\\n    function unpause() external onlyPauser {\\r\\n        paused = false;\\r\\n        emit Unpause();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev update the pauser role\\r\\n     */\\r\\n    function updatePauser(address _newPauser) external onlyOwner {\\r\\n        require(_newPauser != address(0), \\\"Pausable: new pauser is the zero address\\\");\\r\\n        pauser = _newPauser;\\r\\n        emit PauserChanged(pauser);\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: contracts/v1/Blacklistable.sol\\r\\n\\r\\n/**\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/**\\r\\n * @title Blacklistable Token\\r\\n * @dev Allows accounts to be blacklisted by a \\\"blacklister\\\" role\\r\\n */\\r\\ncontract Blacklistable is Ownable {\\r\\n    address public blacklister;\\r\\n    mapping(address => bool) internal blacklisted;\\r\\n\\r\\n    event Blacklisted(address indexed _account);\\r\\n    event UnBlacklisted(address indexed _account);\\r\\n    event BlacklisterChanged(address indexed newBlacklister);\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the blacklister\\r\\n     */\\r\\n    modifier onlyBlacklister() {\\r\\n        require(msg.sender == blacklister, \\\"Blacklistable: caller is not the blacklister\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if argument account is blacklisted\\r\\n     * @param _account The address to check\\r\\n     */\\r\\n    modifier notBlacklisted(address _account) {\\r\\n        require(!blacklisted[_account], \\\"Blacklistable: account is blacklisted\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Checks if account is blacklisted\\r\\n     * @param _account The address to check\\r\\n     */\\r\\n    function isBlacklisted(address _account) external view returns (bool) {\\r\\n        return blacklisted[_account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Adds account to blacklist\\r\\n     * @param _account The address to blacklist\\r\\n     */\\r\\n    function blacklist(address _account) external onlyBlacklister {\\r\\n        blacklisted[_account] = true;\\r\\n        emit Blacklisted(_account);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes account from blacklist\\r\\n     * @param _account The address to remove from the blacklist\\r\\n     */\\r\\n    function unBlacklist(address _account) external onlyBlacklister {\\r\\n        blacklisted[_account] = false;\\r\\n        emit UnBlacklisted(_account);\\r\\n    }\\r\\n\\r\\n    function updateBlacklister(address _newBlacklister) external onlyOwner {\\r\\n        require(\\r\\n            _newBlacklister != address(0),\\r\\n            \\\"Blacklistable: new blacklister is the zero address\\\"\\r\\n        );\\r\\n        blacklister = _newBlacklister;\\r\\n        emit BlacklisterChanged(blacklister);\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: contracts/v1/FiatTokenV1.sol\\r\\n\\r\\n/**\\r\\n *\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/**\\r\\n * @title FiatToken\\r\\n * @dev ERC20 Token backed by fiat reserves\\r\\n */\\r\\ncontract FiatTokenV1 is AbstractFiatTokenV1, Ownable, Pausable, Blacklistable {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    string public name;\\r\\n    string public symbol;\\r\\n    uint8 public decimals;\\r\\n    string public currency;\\r\\n    address public masterMinter;\\r\\n    bool internal initialized;\\r\\n\\r\\n    mapping(address => uint256) internal balances;\\r\\n    mapping(address => mapping(address => uint256)) internal allowed;\\r\\n    uint256 internal totalSupply_ = 0;\\r\\n    mapping(address => bool) internal minters;\\r\\n    mapping(address => uint256) internal minterAllowed;\\r\\n\\r\\n    event Mint(address indexed minter, address indexed to, uint256 amount);\\r\\n    event Burn(address indexed burner, uint256 amount);\\r\\n    event MinterConfigured(address indexed minter, uint256 minterAllowedAmount);\\r\\n    event MinterRemoved(address indexed oldMinter);\\r\\n    event MasterMinterChanged(address indexed newMasterMinter);\\r\\n\\r\\n    function initialize(\\r\\n        string memory tokenName,\\r\\n        string memory tokenSymbol,\\r\\n        string memory tokenCurrency,\\r\\n        uint8 tokenDecimals,\\r\\n        address newMasterMinter,\\r\\n        address newPauser,\\r\\n        address newBlacklister,\\r\\n        address newOwner\\r\\n    ) public {\\r\\n        require(!initialized, \\\"FiatToken: contract is already initialized\\\");\\r\\n        require(newMasterMinter != address(0), \\\"FiatToken: new masterMinter is the zero address\\\");\\r\\n        require(newPauser != address(0), \\\"FiatToken: new pauser is the zero address\\\");\\r\\n        require(newBlacklister != address(0), \\\"FiatToken: new blacklister is the zero address\\\");\\r\\n        require(newOwner != address(0), \\\"FiatToken: new owner is the zero address\\\");\\r\\n\\r\\n        name = tokenName;\\r\\n        symbol = tokenSymbol;\\r\\n        currency = tokenCurrency;\\r\\n        decimals = tokenDecimals;\\r\\n        masterMinter = newMasterMinter;\\r\\n        pauser = newPauser;\\r\\n        blacklister = newBlacklister;\\r\\n        setOwner(newOwner);\\r\\n        initialized = true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than a minter\\r\\n     */\\r\\n    modifier onlyMinters() {\\r\\n        require(minters[msg.sender], \\\"FiatToken: caller is not a minter\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Function to mint tokens\\r\\n     * @param _to The address that will receive the minted tokens.\\r\\n     * @param _amount The amount of tokens to mint. Must be less than or equal\\r\\n     * to the minterAllowance of the caller.\\r\\n     * @return A boolean that indicates if the operation was successful.\\r\\n     */\\r\\n    function mint(\\r\\n        address _to,\\r\\n        uint256 _amount\\r\\n    )\\r\\n        external\\r\\n        whenNotPaused\\r\\n        onlyMinters\\r\\n        notBlacklisted(msg.sender)\\r\\n        notBlacklisted(_to)\\r\\n        returns (bool)\\r\\n    {\\r\\n        require(_to != address(0), \\\"FiatToken: mint to the zero address\\\");\\r\\n        require(_amount > 0, \\\"FiatToken: mint amount not greater than 0\\\");\\r\\n\\r\\n        uint256 mintingAllowedAmount = minterAllowed[msg.sender];\\r\\n        require(_amount <= mintingAllowedAmount, \\\"FiatToken: mint amount exceeds minterAllowance\\\");\\r\\n\\r\\n        totalSupply_ = totalSupply_.add(_amount);\\r\\n        balances[_to] = balances[_to].add(_amount);\\r\\n        minterAllowed[msg.sender] = mintingAllowedAmount.sub(_amount);\\r\\n        emit Mint(msg.sender, _to, _amount);\\r\\n        emit Transfer(address(0), _to, _amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the masterMinter\\r\\n     */\\r\\n    modifier onlyMasterMinter() {\\r\\n        require(msg.sender == masterMinter, \\\"FiatToken: caller is not the masterMinter\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get minter allowance for an account\\r\\n     * @param minter The address of the minter\\r\\n     */\\r\\n    function minterAllowance(address minter) external view returns (uint256) {\\r\\n        return minterAllowed[minter];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Checks if account is a minter\\r\\n     * @param account The address to check\\r\\n     */\\r\\n    function isMinter(address account) external view returns (bool) {\\r\\n        return minters[account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Amount of remaining tokens spender is allowed to transfer on\\r\\n     * behalf of the token owner\\r\\n     * @param owner     Token owner's address\\r\\n     * @param spender   Spender's address\\r\\n     * @return Allowance amount\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view override returns (uint256) {\\r\\n        return allowed[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get totalSupply of token\\r\\n     */\\r\\n    function totalSupply() external view override returns (uint256) {\\r\\n        return totalSupply_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get token balance of an account\\r\\n     * @param account address The account\\r\\n     */\\r\\n    function balanceOf(address account) external view override returns (uint256) {\\r\\n        return balances[account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Set spender's allowance over the caller's tokens to be a given\\r\\n     * value.\\r\\n     * @param spender   Spender's address\\r\\n     * @param value     Allowance amount\\r\\n     * @return True if successful\\r\\n     */\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    )\\r\\n        external\\r\\n        override\\r\\n        whenNotPaused\\r\\n        notBlacklisted(msg.sender)\\r\\n        notBlacklisted(spender)\\r\\n        returns (bool)\\r\\n    {\\r\\n        _approve(msg.sender, spender, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to set allowance\\r\\n     * @param owner     Token owner's address\\r\\n     * @param spender   Spender's address\\r\\n     * @param value     Allowance amount\\r\\n     */\\r\\n    function _approve(address owner, address spender, uint256 value) internal override {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n        allowed[owner][spender] = value;\\r\\n        emit Approval(owner, spender, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Transfer tokens by spending allowance\\r\\n     * @param from  Payer's address\\r\\n     * @param to    Payee's address\\r\\n     * @param value Transfer amount\\r\\n     * @return True if successful\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    )\\r\\n        external\\r\\n        override\\r\\n        whenNotPaused\\r\\n        notBlacklisted(msg.sender)\\r\\n        notBlacklisted(from)\\r\\n        notBlacklisted(to)\\r\\n        returns (bool)\\r\\n    {\\r\\n        require(value <= allowed[from][msg.sender], \\\"ERC20: transfer amount exceeds allowance\\\");\\r\\n        _transfer(from, to, value);\\r\\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Transfer tokens from the caller\\r\\n     * @param to    Payee's address\\r\\n     * @param value Transfer amount\\r\\n     * @return True if successful\\r\\n     */\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external override whenNotPaused notBlacklisted(msg.sender) notBlacklisted(to) returns (bool) {\\r\\n        _transfer(msg.sender, to, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Internal function to process transfers\\r\\n     * @param from  Payer's address\\r\\n     * @param to    Payee's address\\r\\n     * @param value Transfer amount\\r\\n     */\\r\\n    function _transfer(address from, address to, uint256 value) internal override {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        require(value <= balances[from], \\\"ERC20: transfer amount exceeds balance\\\");\\r\\n\\r\\n        balances[from] = balances[from].sub(value);\\r\\n        balances[to] = balances[to].add(value);\\r\\n        emit Transfer(from, to, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Function to add/update a new minter\\r\\n     * @param minter The address of the minter\\r\\n     * @param minterAllowedAmount The minting amount allowed for the minter\\r\\n     * @return True if the operation was successful.\\r\\n     */\\r\\n    function configureMinter(\\r\\n        address minter,\\r\\n        uint256 minterAllowedAmount\\r\\n    ) external whenNotPaused onlyMasterMinter returns (bool) {\\r\\n        minters[minter] = true;\\r\\n        minterAllowed[minter] = minterAllowedAmount;\\r\\n        emit MinterConfigured(minter, minterAllowedAmount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Function to remove a minter\\r\\n     * @param minter The address of the minter to remove\\r\\n     * @return True if the operation was successful.\\r\\n     */\\r\\n    function removeMinter(address minter) external onlyMasterMinter returns (bool) {\\r\\n        minters[minter] = false;\\r\\n        minterAllowed[minter] = 0;\\r\\n        emit MinterRemoved(minter);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev allows a minter to burn some of its own tokens\\r\\n     * Validates that caller is a minter and that sender is not blacklisted\\r\\n     * amount is less than or equal to the minter's account balance\\r\\n     * @param _amount uint256 the amount of tokens to be burned\\r\\n     */\\r\\n    function burn(uint256 _amount) external whenNotPaused onlyMinters notBlacklisted(msg.sender) {\\r\\n        uint256 balance = balances[msg.sender];\\r\\n        require(_amount > 0, \\\"FiatToken: burn amount not greater than 0\\\");\\r\\n        require(balance >= _amount, \\\"FiatToken: burn amount exceeds balance\\\");\\r\\n\\r\\n        totalSupply_ = totalSupply_.sub(_amount);\\r\\n        balances[msg.sender] = balance.sub(_amount);\\r\\n        emit Burn(msg.sender, _amount);\\r\\n        emit Transfer(msg.sender, address(0), _amount);\\r\\n    }\\r\\n\\r\\n    function updateMasterMinter(address _newMasterMinter) external onlyOwner {\\r\\n        require(_newMasterMinter != address(0), \\\"FiatToken: new masterMinter is the zero address\\\");\\r\\n        masterMinter = _newMasterMinter;\\r\\n        emit MasterMinterChanged(masterMinter);\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: @openzeppelin/contracts/utils/Address.sol\\r\\n\\r\\npragma solidity ^0.6.2;\\r\\n\\r\\n/**\\r\\n * @dev Collection of functions related to the address type\\r\\n */\\r\\nlibrary Address {\\r\\n    /**\\r\\n     * @dev Returns true if `account` is a contract.\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * It is unsafe to assume that an address for which this function returns\\r\\n     * false is an externally-owned account (EOA) and not a contract.\\r\\n     *\\r\\n     * Among others, `isContract` will return false for the following\\r\\n     * types of addresses:\\r\\n     *\\r\\n     *  - an externally-owned account\\r\\n     *  - a contract in construction\\r\\n     *  - an address where a contract will be created\\r\\n     *  - an address where a contract lived, but was destroyed\\r\\n     * ====\\r\\n     */\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\r\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\r\\n        // for accounts without code, i.e. `keccak256('')`\\r\\n        bytes32 codehash;\\r\\n\\r\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\r\\n        // solhint-disable-next-line no-inline-assembly\\r\\n        assembly {\\r\\n            codehash := extcodehash(account)\\r\\n        }\\r\\n        return (codehash != accountHash && codehash != 0x0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\r\\n     * `recipient`, forwarding all available gas and reverting on errors.\\r\\n     *\\r\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\r\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\r\\n     * imposed by `transfer`, making them unable to receive funds via\\r\\n     * `transfer`. {sendValue} removes this limitation.\\r\\n     *\\r\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\r\\n     *\\r\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\r\\n     * taken to not create reentrancy vulnerabilities. Consider using\\r\\n     * {ReentrancyGuard} or the\\r\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\r\\n     */\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\r\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\r\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a Solidity function call using a low level `call`. A\\r\\n     * plain`call` is an unsafe replacement for a function call: use this\\r\\n     * function instead.\\r\\n     *\\r\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\r\\n     * function (like regular Solidity function calls).\\r\\n     *\\r\\n     * Returns the raw returned data. To convert to the expected return value,\\r\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `target` must be a contract.\\r\\n     * - calling `target` with `data` must not revert.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\r\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\r\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but also transferring `value` wei to `target`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - the calling contract must have an ETH balance of at least `value`.\\r\\n     * - the called Solidity function must be `payable`.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value\\r\\n    ) internal returns (bytes memory) {\\r\\n        return\\r\\n            functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\r\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\r\\n        return _functionCallWithValue(target, data, value, errorMessage);\\r\\n    }\\r\\n\\r\\n    function _functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 weiValue,\\r\\n        string memory errorMessage\\r\\n    ) private returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(data);\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                // solhint-disable-next-line no-inline-assembly\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol\\r\\n\\r\\npragma solidity ^0.6.0;\\r\\n\\r\\n/**\\r\\n * @title SafeERC20\\r\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\r\\n * contract returns false). Tokens that return no value (and instead revert or\\r\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\r\\n * successful.\\r\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\r\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\r\\n */\\r\\nlibrary SafeERC20 {\\r\\n    using SafeMath for uint256;\\r\\n    using Address for address;\\r\\n\\r\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\r\\n    }\\r\\n\\r\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\r\\n        _callOptionalReturn(\\r\\n            token,\\r\\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Deprecated. This function has issues similar to the ones found in\\r\\n     * {IERC20-approve}, and its usage is discouraged.\\r\\n     *\\r\\n     * Whenever possible, use {safeIncreaseAllowance} and\\r\\n     * {safeDecreaseAllowance} instead.\\r\\n     */\\r\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\r\\n        // safeApprove should only be called when setting an initial allowance,\\r\\n        // or when resetting it to zero. To increase and decrease it, use\\r\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\r\\n        // solhint-disable-next-line max-line-length\\r\\n        require(\\r\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\r\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\r\\n        );\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\r\\n    }\\r\\n\\r\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\r\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\r\\n        _callOptionalReturn(\\r\\n            token,\\r\\n            abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\r\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(\\r\\n            value,\\r\\n            \\\"SafeERC20: decreased allowance below zero\\\"\\r\\n        );\\r\\n        _callOptionalReturn(\\r\\n            token,\\r\\n            abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\r\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\r\\n     * @param token The token targeted by the call.\\r\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\r\\n     */\\r\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\r\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\r\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\r\\n        // the target address contains contract code and also asserts for success in the low-level call.\\r\\n\\r\\n        bytes memory returndata = address(token).functionCall(\\r\\n            data,\\r\\n            \\\"SafeERC20: low-level call failed\\\"\\r\\n        );\\r\\n        if (returndata.length > 0) {\\r\\n            // Return data is optional\\r\\n            // solhint-disable-next-line max-line-length\\r\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: contracts/v1.1/Rescuable.sol\\r\\n\\r\\n/**\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\ncontract Rescuable is Ownable {\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    address private _rescuer;\\r\\n\\r\\n    event RescuerChanged(address indexed newRescuer);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns current rescuer\\r\\n     * @return Rescuer's address\\r\\n     */\\r\\n    function rescuer() external view returns (address) {\\r\\n        return _rescuer;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Revert if called by any account other than the rescuer.\\r\\n     */\\r\\n    modifier onlyRescuer() {\\r\\n        require(msg.sender == _rescuer, \\\"Rescuable: caller is not the rescuer\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Rescue ERC20 tokens locked up in this contract.\\r\\n     * @param tokenContract ERC20 token contract address\\r\\n     * @param to        Recipient address\\r\\n     * @param amount    Amount to withdraw\\r\\n     */\\r\\n    function rescueERC20(IERC20 tokenContract, address to, uint256 amount) external onlyRescuer {\\r\\n        tokenContract.safeTransfer(to, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Assign the rescuer role to a given address.\\r\\n     * @param newRescuer New rescuer's address\\r\\n     */\\r\\n    function updateRescuer(address newRescuer) external onlyOwner {\\r\\n        require(newRescuer != address(0), \\\"Rescuable: new rescuer is the zero address\\\");\\r\\n        _rescuer = newRescuer;\\r\\n        emit RescuerChanged(newRescuer);\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: contracts/v1.1/FiatTokenV1_1.sol\\r\\n\\r\\n/**\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/**\\r\\n * @title FiatTokenV1_1\\r\\n * @dev ERC20 Token backed by fiat reserves\\r\\n */\\r\\ncontract FiatTokenV1_1 is FiatTokenV1, Rescuable {\\r\\n\\r\\n}\\r\\n\\r\\n// File: contracts/v2/AbstractFiatTokenV2.sol\\r\\n\\r\\n/**\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\nabstract contract AbstractFiatTokenV2 is AbstractFiatTokenV1 {\\r\\n    function _increaseAllowance(address owner, address spender, uint256 increment) internal virtual;\\r\\n\\r\\n    function _decreaseAllowance(address owner, address spender, uint256 decrement) internal virtual;\\r\\n}\\r\\n\\r\\n// File: contracts/util/ECRecover.sol\\r\\n\\r\\n/**\\r\\n * Copyright (c) 2016-2019 zOS Global Limited\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/**\\r\\n * @title ECRecover\\r\\n * @notice A library that provides a safe ECDSA recovery function\\r\\n */\\r\\nlibrary ECRecover {\\r\\n    /**\\r\\n     * @notice Recover signer's address from a signed message\\r\\n     * @dev Adapted from: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/65e4ffde586ec89af3b7e9140bdc9235d1254853/contracts/cryptography/ECDSA.sol\\r\\n     * Modifications: Accept v, r, and s as separate arguments\\r\\n     * @param digest    Keccak-256 hash digest of the signed message\\r\\n     * @param v         v of the signature\\r\\n     * @param r         r of the signature\\r\\n     * @param s         s of the signature\\r\\n     * @return Signer address\\r\\n     */\\r\\n    function recover(\\r\\n        bytes32 digest,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) internal pure returns (address) {\\r\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\r\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\r\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\r\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\r\\n        //\\r\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\r\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\r\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\r\\n        // these malleable signatures as well.\\r\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\r\\n            revert(\\\"ECRecover: invalid signature 's' value\\\");\\r\\n        }\\r\\n\\r\\n        if (v != 27 && v != 28) {\\r\\n            revert(\\\"ECRecover: invalid signature 'v' value\\\");\\r\\n        }\\r\\n\\r\\n        // If the signature is valid (and not malleable), return the signer address\\r\\n        address signer = ecrecover(digest, v, r, s);\\r\\n        require(signer != address(0), \\\"ECRecover: invalid signature\\\");\\r\\n\\r\\n        return signer;\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: contracts/util/EIP712.sol\\r\\n\\r\\n/**\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/**\\r\\n * @title EIP712\\r\\n * @notice A library that provides EIP712 helper functions\\r\\n */\\r\\nlibrary EIP712 {\\r\\n    /**\\r\\n     * @notice Make EIP712 domain separator\\r\\n     * @param name      Contract name\\r\\n     * @param version   Contract version\\r\\n     * @return Domain separator\\r\\n     */\\r\\n    function makeDomainSeparator(\\r\\n        string memory name,\\r\\n        string memory version\\r\\n    ) internal view returns (bytes32) {\\r\\n        uint256 chainId;\\r\\n        assembly {\\r\\n            chainId := chainid()\\r\\n        }\\r\\n        return\\r\\n            keccak256(\\r\\n                abi.encode(\\r\\n                    // keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\\r\\n                    0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f,\\r\\n                    keccak256(bytes(name)),\\r\\n                    keccak256(bytes(version)),\\r\\n                    chainId,\\r\\n                    address(this)\\r\\n                )\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Recover signer's address from a EIP712 signature\\r\\n     * @param domainSeparator   Domain separator\\r\\n     * @param v                 v of the signature\\r\\n     * @param r                 r of the signature\\r\\n     * @param s                 s of the signature\\r\\n     * @param typeHashAndData   Type hash concatenated with data\\r\\n     * @return Signer's address\\r\\n     */\\r\\n    function recover(\\r\\n        bytes32 domainSeparator,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s,\\r\\n        bytes memory typeHashAndData\\r\\n    ) internal pure returns (address) {\\r\\n        bytes32 digest = keccak256(\\r\\n            abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, keccak256(typeHashAndData))\\r\\n        );\\r\\n        return ECRecover.recover(digest, v, r, s);\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: contracts/v2/EIP712Domain.sol\\r\\n\\r\\n/**\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/**\\r\\n * @title EIP712 Domain\\r\\n */\\r\\ncontract EIP712Domain {\\r\\n    /**\\r\\n     * @dev EIP712 Domain Separator\\r\\n     */\\r\\n    bytes32 public DOMAIN_SEPARATOR;\\r\\n}\\r\\n\\r\\n// File: contracts/v2/EIP3009.sol\\r\\n\\r\\n/**\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/**\\r\\n * @title EIP-3009\\r\\n * @notice Provide internal implementation for gas-abstracted transfers\\r\\n * @dev Contracts that inherit from this must wrap these with publicly\\r\\n * accessible functions, optionally adding modifiers where necessary\\r\\n */\\r\\nabstract contract EIP3009 is AbstractFiatTokenV2, EIP712Domain {\\r\\n    // keccak256(\\\"TransferWithAuthorization(address from,address to,uint256 value,uint256 validAfter,uint256 validBefore,bytes32 nonce)\\\")\\r\\n    bytes32 public constant TRANSFER_WITH_AUTHORIZATION_TYPEHASH =\\r\\n        0x7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a2267;\\r\\n\\r\\n    // keccak256(\\\"ReceiveWithAuthorization(address from,address to,uint256 value,uint256 validAfter,uint256 validBefore,bytes32 nonce)\\\")\\r\\n    bytes32 public constant RECEIVE_WITH_AUTHORIZATION_TYPEHASH =\\r\\n        0xd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de8;\\r\\n\\r\\n    // keccak256(\\\"CancelAuthorization(address authorizer,bytes32 nonce)\\\")\\r\\n    bytes32 public constant CANCEL_AUTHORIZATION_TYPEHASH =\\r\\n        0x158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a1597429;\\r\\n\\r\\n    /**\\r\\n     * @dev authorizer address => nonce => bool (true if nonce is used)\\r\\n     */\\r\\n    mapping(address => mapping(bytes32 => bool)) private _authorizationStates;\\r\\n\\r\\n    event AuthorizationUsed(address indexed authorizer, bytes32 indexed nonce);\\r\\n    event AuthorizationCanceled(address indexed authorizer, bytes32 indexed nonce);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the state of an authorization\\r\\n     * @dev Nonces are randomly generated 32-byte data unique to the\\r\\n     * authorizer's address\\r\\n     * @param authorizer    Authorizer's address\\r\\n     * @param nonce         Nonce of the authorization\\r\\n     * @return True if the nonce is used\\r\\n     */\\r\\n    function authorizationState(address authorizer, bytes32 nonce) external view returns (bool) {\\r\\n        return _authorizationStates[authorizer][nonce];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Execute a transfer with a signed authorization\\r\\n     * @param from          Payer's address (Authorizer)\\r\\n     * @param to            Payee's address\\r\\n     * @param value         Amount to be transferred\\r\\n     * @param validAfter    The time after which this is valid (unix time)\\r\\n     * @param validBefore   The time before which this is valid (unix time)\\r\\n     * @param nonce         Unique nonce\\r\\n     * @param v             v of the signature\\r\\n     * @param r             r of the signature\\r\\n     * @param s             s of the signature\\r\\n     */\\r\\n    function _transferWithAuthorization(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value,\\r\\n        uint256 validAfter,\\r\\n        uint256 validBefore,\\r\\n        bytes32 nonce,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) internal {\\r\\n        _requireValidAuthorization(from, nonce, validAfter, validBefore);\\r\\n\\r\\n        bytes memory data = abi.encode(\\r\\n            TRANSFER_WITH_AUTHORIZATION_TYPEHASH,\\r\\n            from,\\r\\n            to,\\r\\n            value,\\r\\n            validAfter,\\r\\n            validBefore,\\r\\n            nonce\\r\\n        );\\r\\n        require(\\r\\n            EIP712.recover(DOMAIN_SEPARATOR, v, r, s, data) == from,\\r\\n            \\\"FiatTokenV2: invalid signature\\\"\\r\\n        );\\r\\n\\r\\n        _markAuthorizationAsUsed(from, nonce);\\r\\n        _transfer(from, to, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Receive a transfer with a signed authorization from the payer\\r\\n     * @dev This has an additional check to ensure that the payee's address\\r\\n     * matches the caller of this function to prevent front-running attacks.\\r\\n     * @param from          Payer's address (Authorizer)\\r\\n     * @param to            Payee's address\\r\\n     * @param value         Amount to be transferred\\r\\n     * @param validAfter    The time after which this is valid (unix time)\\r\\n     * @param validBefore   The time before which this is valid (unix time)\\r\\n     * @param nonce         Unique nonce\\r\\n     * @param v             v of the signature\\r\\n     * @param r             r of the signature\\r\\n     * @param s             s of the signature\\r\\n     */\\r\\n    function _receiveWithAuthorization(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value,\\r\\n        uint256 validAfter,\\r\\n        uint256 validBefore,\\r\\n        bytes32 nonce,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) internal {\\r\\n        require(to == msg.sender, \\\"FiatTokenV2: caller must be the payee\\\");\\r\\n        _requireValidAuthorization(from, nonce, validAfter, validBefore);\\r\\n\\r\\n        bytes memory data = abi.encode(\\r\\n            RECEIVE_WITH_AUTHORIZATION_TYPEHASH,\\r\\n            from,\\r\\n            to,\\r\\n            value,\\r\\n            validAfter,\\r\\n            validBefore,\\r\\n            nonce\\r\\n        );\\r\\n        require(\\r\\n            EIP712.recover(DOMAIN_SEPARATOR, v, r, s, data) == from,\\r\\n            \\\"FiatTokenV2: invalid signature\\\"\\r\\n        );\\r\\n\\r\\n        _markAuthorizationAsUsed(from, nonce);\\r\\n        _transfer(from, to, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Attempt to cancel an authorization\\r\\n     * @param authorizer    Authorizer's address\\r\\n     * @param nonce         Nonce of the authorization\\r\\n     * @param v             v of the signature\\r\\n     * @param r             r of the signature\\r\\n     * @param s             s of the signature\\r\\n     */\\r\\n    function _cancelAuthorization(\\r\\n        address authorizer,\\r\\n        bytes32 nonce,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) internal {\\r\\n        _requireUnusedAuthorization(authorizer, nonce);\\r\\n\\r\\n        bytes memory data = abi.encode(CANCEL_AUTHORIZATION_TYPEHASH, authorizer, nonce);\\r\\n        require(\\r\\n            EIP712.recover(DOMAIN_SEPARATOR, v, r, s, data) == authorizer,\\r\\n            \\\"FiatTokenV2: invalid signature\\\"\\r\\n        );\\r\\n\\r\\n        _authorizationStates[authorizer][nonce] = true;\\r\\n        emit AuthorizationCanceled(authorizer, nonce);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Check that an authorization is unused\\r\\n     * @param authorizer    Authorizer's address\\r\\n     * @param nonce         Nonce of the authorization\\r\\n     */\\r\\n    function _requireUnusedAuthorization(address authorizer, bytes32 nonce) private view {\\r\\n        require(\\r\\n            !_authorizationStates[authorizer][nonce],\\r\\n            \\\"FiatTokenV2: authorization is used or canceled\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Check that authorization is valid\\r\\n     * @param authorizer    Authorizer's address\\r\\n     * @param nonce         Nonce of the authorization\\r\\n     * @param validAfter    The time after which this is valid (unix time)\\r\\n     * @param validBefore   The time before which this is valid (unix time)\\r\\n     */\\r\\n    function _requireValidAuthorization(\\r\\n        address authorizer,\\r\\n        bytes32 nonce,\\r\\n        uint256 validAfter,\\r\\n        uint256 validBefore\\r\\n    ) private view {\\r\\n        require(now > validAfter, \\\"FiatTokenV2: authorization is not yet valid\\\");\\r\\n        require(now < validBefore, \\\"FiatTokenV2: authorization is expired\\\");\\r\\n        _requireUnusedAuthorization(authorizer, nonce);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Mark an authorization as used\\r\\n     * @param authorizer    Authorizer's address\\r\\n     * @param nonce         Nonce of the authorization\\r\\n     */\\r\\n    function _markAuthorizationAsUsed(address authorizer, bytes32 nonce) private {\\r\\n        _authorizationStates[authorizer][nonce] = true;\\r\\n        emit AuthorizationUsed(authorizer, nonce);\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: contracts/v2/EIP2612.sol\\r\\n\\r\\n/**\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/**\\r\\n * @title EIP-2612\\r\\n * @notice Provide internal implementation for gas-abstracted approvals\\r\\n */\\r\\nabstract contract EIP2612 is AbstractFiatTokenV2, EIP712Domain {\\r\\n    // keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\\r\\n    bytes32 public constant PERMIT_TYPEHASH =\\r\\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\\r\\n\\r\\n    mapping(address => uint256) private _permitNonces;\\r\\n\\r\\n    /**\\r\\n     * @notice Nonces for permit\\r\\n     * @param owner Token owner's address (Authorizer)\\r\\n     * @return Next nonce\\r\\n     */\\r\\n    function nonces(address owner) external view returns (uint256) {\\r\\n        return _permitNonces[owner];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Verify a signed approval permit and execute if valid\\r\\n     * @param owner     Token owner's address (Authorizer)\\r\\n     * @param spender   Spender's address\\r\\n     * @param value     Amount of allowance\\r\\n     * @param deadline  The time at which this expires (unix time)\\r\\n     * @param v         v of the signature\\r\\n     * @param r         r of the signature\\r\\n     * @param s         s of the signature\\r\\n     */\\r\\n    function _permit(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) internal {\\r\\n        require(deadline >= now, \\\"FiatTokenV2: permit is expired\\\");\\r\\n\\r\\n        bytes memory data = abi.encode(\\r\\n            PERMIT_TYPEHASH,\\r\\n            owner,\\r\\n            spender,\\r\\n            value,\\r\\n            _permitNonces[owner]++,\\r\\n            deadline\\r\\n        );\\r\\n        require(\\r\\n            EIP712.recover(DOMAIN_SEPARATOR, v, r, s, data) == owner,\\r\\n            \\\"EIP2612: invalid signature\\\"\\r\\n        );\\r\\n\\r\\n        _approve(owner, spender, value);\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: contracts/v2/FiatTokenV2.sol\\r\\n\\r\\n/**\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/**\\r\\n * @title FiatToken V2\\r\\n * @notice ERC20 Token backed by fiat reserves, version 2\\r\\n */\\r\\ncontract FiatTokenV2 is FiatTokenV1_1, EIP3009, EIP2612 {\\r\\n    uint8 internal _initializedVersion;\\r\\n\\r\\n    /**\\r\\n     * @notice Initialize v2\\r\\n     * @param newName   New token name\\r\\n     */\\r\\n    function initializeV2(string calldata newName) external {\\r\\n        // solhint-disable-next-line reason-string\\r\\n        require(initialized && _initializedVersion == 0);\\r\\n        name = newName;\\r\\n        DOMAIN_SEPARATOR = EIP712.makeDomainSeparator(newName, \\\"2\\\");\\r\\n        _initializedVersion = 1;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Increase the allowance by a given increment\\r\\n     * @param spender   Spender's address\\r\\n     * @param increment Amount of increase in allowance\\r\\n     * @return True if successful\\r\\n     */\\r\\n    function increaseAllowance(\\r\\n        address spender,\\r\\n        uint256 increment\\r\\n    ) external whenNotPaused notBlacklisted(msg.sender) notBlacklisted(spender) returns (bool) {\\r\\n        _increaseAllowance(msg.sender, spender, increment);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Decrease the allowance by a given decrement\\r\\n     * @param spender   Spender's address\\r\\n     * @param decrement Amount of decrease in allowance\\r\\n     * @return True if successful\\r\\n     */\\r\\n    function decreaseAllowance(\\r\\n        address spender,\\r\\n        uint256 decrement\\r\\n    ) external whenNotPaused notBlacklisted(msg.sender) notBlacklisted(spender) returns (bool) {\\r\\n        _decreaseAllowance(msg.sender, spender, decrement);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Execute a transfer with a signed authorization\\r\\n     * @param from          Payer's address (Authorizer)\\r\\n     * @param to            Payee's address\\r\\n     * @param value         Amount to be transferred\\r\\n     * @param validAfter    The time after which this is valid (unix time)\\r\\n     * @param validBefore   The time before which this is valid (unix time)\\r\\n     * @param nonce         Unique nonce\\r\\n     * @param v             v of the signature\\r\\n     * @param r             r of the signature\\r\\n     * @param s             s of the signature\\r\\n     */\\r\\n    function transferWithAuthorization(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value,\\r\\n        uint256 validAfter,\\r\\n        uint256 validBefore,\\r\\n        bytes32 nonce,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external whenNotPaused notBlacklisted(from) notBlacklisted(to) {\\r\\n        _transferWithAuthorization(from, to, value, validAfter, validBefore, nonce, v, r, s);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Receive a transfer with a signed authorization from the payer\\r\\n     * @dev This has an additional check to ensure that the payee's address\\r\\n     * matches the caller of this function to prevent front-running attacks.\\r\\n     * @param from          Payer's address (Authorizer)\\r\\n     * @param to            Payee's address\\r\\n     * @param value         Amount to be transferred\\r\\n     * @param validAfter    The time after which this is valid (unix time)\\r\\n     * @param validBefore   The time before which this is valid (unix time)\\r\\n     * @param nonce         Unique nonce\\r\\n     * @param v             v of the signature\\r\\n     * @param r             r of the signature\\r\\n     * @param s             s of the signature\\r\\n     */\\r\\n    function receiveWithAuthorization(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value,\\r\\n        uint256 validAfter,\\r\\n        uint256 validBefore,\\r\\n        bytes32 nonce,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external whenNotPaused notBlacklisted(from) notBlacklisted(to) {\\r\\n        _receiveWithAuthorization(from, to, value, validAfter, validBefore, nonce, v, r, s);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Attempt to cancel an authorization\\r\\n     * @dev Works only if the authorization is not yet used.\\r\\n     * @param authorizer    Authorizer's address\\r\\n     * @param nonce         Nonce of the authorization\\r\\n     * @param v             v of the signature\\r\\n     * @param r             r of the signature\\r\\n     * @param s             s of the signature\\r\\n     */\\r\\n    function cancelAuthorization(\\r\\n        address authorizer,\\r\\n        bytes32 nonce,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external whenNotPaused {\\r\\n        _cancelAuthorization(authorizer, nonce, v, r, s);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Update allowance with a signed permit\\r\\n     * @param owner       Token owner's address (Authorizer)\\r\\n     * @param spender     Spender's address\\r\\n     * @param value       Amount of allowance\\r\\n     * @param deadline    Expiration time, seconds since the epoch\\r\\n     * @param v           v of the signature\\r\\n     * @param r           r of the signature\\r\\n     * @param s           s of the signature\\r\\n     */\\r\\n    function permit(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external whenNotPaused notBlacklisted(owner) notBlacklisted(spender) {\\r\\n        _permit(owner, spender, value, deadline, v, r, s);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Internal function to increase the allowance by a given increment\\r\\n     * @param owner     Token owner's address\\r\\n     * @param spender   Spender's address\\r\\n     * @param increment Amount of increase\\r\\n     */\\r\\n    function _increaseAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 increment\\r\\n    ) internal override {\\r\\n        _approve(owner, spender, allowed[owner][spender].add(increment));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Internal function to decrease the allowance by a given decrement\\r\\n     * @param owner     Token owner's address\\r\\n     * @param spender   Spender's address\\r\\n     * @param decrement Amount of decrease\\r\\n     */\\r\\n    function _decreaseAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 decrement\\r\\n    ) internal override {\\r\\n        _approve(\\r\\n            owner,\\r\\n            spender,\\r\\n            allowed[owner][spender].sub(decrement, \\\"ERC20: decreased allowance below zero\\\")\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\n// File: contracts/v2/FiatTokenV2_1.sol\\r\\n\\r\\n/**\\r\\n * Copyright (c) 2018-2020 CENTRE SECZ\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n// solhint-disable func-name-mixedcase\\r\\n\\r\\n/**\\r\\n * @title FiatToken V2.1\\r\\n * @notice ERC20 Token backed by fiat reserves, version 2.1\\r\\n */\\r\\ncontract FiatTokenV2_1 is FiatTokenV2 {\\r\\n    /**\\r\\n     * @notice Initialize v2.1\\r\\n     * @param lostAndFound  The address to which the locked funds are sent\\r\\n     */\\r\\n    function initializeV2_1(address lostAndFound) external {\\r\\n        // solhint-disable-next-line reason-string\\r\\n        require(_initializedVersion == 1);\\r\\n\\r\\n        uint256 lockedAmount = balances[address(this)];\\r\\n        if (lockedAmount > 0) {\\r\\n            _transfer(address(this), lostAndFound, lockedAmount);\\r\\n        }\\r\\n        blacklisted[address(this)] = true;\\r\\n\\r\\n        _initializedVersion = 2;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Version string for the EIP712 domain separator\\r\\n     * @return Version string\\r\\n     */\\r\\n    function version() external view returns (string memory) {\\r\\n        return \\\"2\\\";\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe310ad10b5b4172e8085ce1bb1df8b388b5c30c9399cc478a79ecc030312842a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526001805460ff60a01b191690556000600b553480156200002357600080fd5b506200002f3362000035565b62000057565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b613fc880620000676000396000f3fe608060405234801561001057600080fd5b50600436106102d65760003560e01c80637f2eecc311610182578063b2118a8d116100e9578063e3ee160e116100a2578063ef55bec61161007c578063ef55bec614610b07578063f2fde38b14610b66578063f9f92be414610b8c578063fe575a8714610bb2576102d6565b8063e3ee160e14610a74578063e5a6b10f14610ad3578063e94a010214610adb576102d6565b8063b2118a8d14610941578063bd10243014610977578063d505accf1461097f578063d608ea64146109d0578063d916948714610a3e578063dd62ed3e14610a46576102d6565b8063a0cc6a681161013b578063a0cc6a681461086f578063a457c2d714610877578063a9059cbb146108a3578063aa20e1e4146108cf578063aa271e1a146108f5578063ad38bf221461091b576102d6565b80637f2eecc3146108215780638456cb59146108295780638a6db9c3146108315780638da5cb5b1461085757806395d89b411461085f5780639fd0506d14610867576102d6565b80633644e515116102415780634e44d956116101fa5780635a049a70116101d45780635a049a701461078c5780635c975abb146107cd57806370a08231146107d55780637ecebe00146107fb576102d6565b80634e44d9561461073257806354fd4d501461075e578063554bab3c14610766576102d6565b80633644e515146106a557806338a63183146106ad57806339509351146106b55780633f4ba83a146106e157806340c10f19146106e957806342966c6814610715576102d6565b80632fc81e09116102935780632fc81e09146104365780633092afd51461045c57806330adf81f14610482578063313ce5671461048a5780633357162b146104a857806335d99f3514610681576102d6565b806306fdde03146102db578063095ea7b31461035857806318160ddd146103985780631a895266146103b257806323b872dd146103da5780632ab6004514610410575b600080fd5b6102e3610bd8565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561031d578181015183820152602001610305565b50505050905090810190601f16801561034a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103846004803603604081101561036e57600080fd5b506001600160a01b038135169060200135610c66565b604080519115158252519081900360200190f35b6103a0610d7a565b60408051918252519081900360200190f35b6103d8600480360360208110156103c857600080fd5b50356001600160a01b0316610d80565b005b610384600480360360608110156103f057600080fd5b506001600160a01b03813581169160208101359091169060400135610e12565b6103d86004803603602081101561042657600080fd5b50356001600160a01b0316611037565b6103d86004803603602081101561044c57600080fd5b50356001600160a01b0316611113565b6103846004803603602081101561047257600080fd5b50356001600160a01b0316611173565b6103a061121a565b61049261123e565b6040805160ff9092168252519081900360200190f35b6103d860048036036101008110156104bf57600080fd5b810190602081018135600160201b8111156104d957600080fd5b8201836020820111156104eb57600080fd5b803590602001918460018302840111600160201b8311171561050c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561055e57600080fd5b82018360208201111561057057600080fd5b803590602001918460018302840111600160201b8311171561059157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156105e357600080fd5b8201836020820111156105f557600080fd5b803590602001918460018302840111600160201b8311171561061657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050813560ff1692505060208101356001600160a01b0390811691604081013582169160608201358116916080013516611247565b610689611453565b604080516001600160a01b039092168252519081900360200190f35b6103a0611462565b610689611468565b610384600480360360408110156106cb57600080fd5b506001600160a01b038135169060200135611477565b6103d8611580565b610384600480360360408110156106ff57600080fd5b506001600160a01b038135169060200135611601565b6103d86004803603602081101561072b57600080fd5b5035611914565b6103846004803603604081101561074857600080fd5b506001600160a01b038135169060200135611b2e565b6102e3611c37565b6103d86004803603602081101561077c57600080fd5b50356001600160a01b0316611c52565b6103d8600480360360a08110156107a257600080fd5b506001600160a01b038135169060208101359060ff6040820135169060608101359060800135611d34565b610384611d9a565b6103a0600480360360208110156107eb57600080fd5b50356001600160a01b0316611daa565b6103a06004803603602081101561081157600080fd5b50356001600160a01b0316611dc5565b6103a0611de0565b6103d8611e04565b6103a06004803603602081101561084757600080fd5b50356001600160a01b0316611e8b565b610689611ea6565b6102e3611eb5565b610689611f10565b6103a0611f1f565b6103846004803603604081101561088d57600080fd5b506001600160a01b038135169060200135611f43565b610384600480360360408110156108b957600080fd5b506001600160a01b03813516906020013561204c565b6103d8600480360360208110156108e557600080fd5b50356001600160a01b0316612155565b6103846004803603602081101561090b57600080fd5b50356001600160a01b0316612237565b6103d86004803603602081101561093157600080fd5b50356001600160a01b0316612255565b6103d86004803603606081101561095757600080fd5b506001600160a01b03813581169160208101359091169060400135612337565b610689612399565b6103d8600480360360e081101561099557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356123a8565b6103d8600480360360208110156109e657600080fd5b810190602081018135600160201b811115610a0057600080fd5b820183602082011115610a1257600080fd5b803590602001918460018302840111600160201b83111715610a3357600080fd5b5090925090506124c8565b6103a0612566565b6103a060048036036040811015610a5c57600080fd5b506001600160a01b038135811691602001351661258a565b6103d86004803603610120811015610a8b57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a08101359060ff60c0820135169060e08101359061010001356125b5565b6102e36126d9565b61038460048036036040811015610af157600080fd5b506001600160a01b038135169060200135612734565b6103d86004803603610120811015610b1e57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a08101359060ff60c0820135169060e081013590610100013561275f565b6103d860048036036020811015610b7c57600080fd5b50356001600160a01b0316612876565b6103d860048036036020811015610ba257600080fd5b50356001600160a01b031661295c565b61038460048036036020811015610bc857600080fd5b50356001600160a01b03166129f1565b6004805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610c5e5780601f10610c3357610100808354040283529160200191610c5e565b820191906000526020600020905b815481529060010190602001808311610c4157829003601f168201915b505050505081565b600154600090600160a01b900460ff1615610cbb576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526003602052604090205460ff1615610d0a5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038416600090815260036020526040902054849060ff1615610d645760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b610d6f338686612a0f565b506001949350505050565b600b5490565b6002546001600160a01b03163314610dc95760405162461bcd60e51b815260040180806020018281038252602c815260200180613c28602c913960400191505060405180910390fd5b6001600160a01b038116600081815260036020526040808220805460ff19169055517f117e3210bb9aa7d9baff172026820255c6f6c30ba8999d1c2fd88e2848137c4e9190a250565b600154600090600160a01b900460ff1615610e67576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526003602052604090205460ff1615610eb65760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038516600090815260036020526040902054859060ff1615610f105760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038516600090815260036020526040902054859060ff1615610f6a5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b0387166000908152600a60209081526040808320338452909152902054851115610fcc5760405162461bcd60e51b8152600401808060200182810382526028815260200180613cee6028913960400191505060405180910390fd5b610fd7878787612afb565b6001600160a01b0387166000908152600a602090815260408083203384529091529020546110059086612c8a565b6001600160a01b0388166000908152600a60209081526040808320338452909152902055600193505050509392505050565b6000546001600160a01b03163314611084576040805162461bcd60e51b81526020600482018190526024820152600080516020613d16833981519152604482015290519081900360640190fd5b6001600160a01b0381166110c95760405162461bcd60e51b815260040180806020018281038252602a815260200180613b86602a913960400191505060405180910390fd5b600e80546001600160a01b0319166001600160a01b0383169081179091556040517fe475e580d85111348e40d8ca33cfdd74c30fe1655c2d8537a13abc10065ffa5a90600090a250565b60125460ff1660011461112557600080fd5b30600090815260096020526040902054801561114657611146308383612afb565b5050306000908152600360205260409020805460ff19908116600117909155601280549091166002179055565b6008546000906001600160a01b031633146111bf5760405162461bcd60e51b8152600401808060200182810382526029815260200180613bff6029913960400191505060405180910390fd5b6001600160a01b0382166000818152600c60209081526040808320805460ff19169055600d909152808220829055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a2506001919050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60065460ff1681565b600854600160a01b900460ff16156112905760405162461bcd60e51b815260040180806020018281038252602a815260200180613d89602a913960400191505060405180910390fd5b6001600160a01b0384166112d55760405162461bcd60e51b815260040180806020018281038252602f815260200180613c9b602f913960400191505060405180910390fd5b6001600160a01b03831661131a5760405162461bcd60e51b8152600401808060200182810382526029815260200180613b5d6029913960400191505060405180910390fd5b6001600160a01b03821661135f5760405162461bcd60e51b815260040180806020018281038252602e815260200180613d36602e913960400191505060405180910390fd5b6001600160a01b0381166113a45760405162461bcd60e51b8152600401808060200182810382526028815260200180613e9c6028913960400191505060405180910390fd5b87516113b79060049060208b019061392b565b5086516113cb9060059060208a019061392b565b5085516113df90600790602089019061392b565b506006805460ff191660ff8716179055600880546001600160a01b03199081166001600160a01b03878116919091179092556001805482168684161790556002805490911691841691909117905561143681612cd3565b50506008805460ff60a01b1916600160a01b179055505050505050565b6008546001600160a01b031681565b600f5481565b600e546001600160a01b031690565b600154600090600160a01b900460ff16156114cc576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526003602052604090205460ff161561151b5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038416600090815260036020526040902054849060ff16156115755760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b610d6f338686612cf5565b6001546001600160a01b031633146115c95760405162461bcd60e51b8152600401808060200182810382526022815260200180613e2a6022913960400191505060405180910390fd5b6001805460ff60a01b191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600154600090600160a01b900460ff1615611656576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b336000908152600c602052604090205460ff166116a45760405162461bcd60e51b8152600401808060200182810382526021815260200180613c7a6021913960400191505060405180910390fd5b3360008181526003602052604090205460ff16156116f35760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038416600090815260036020526040902054849060ff161561174d5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b0385166117925760405162461bcd60e51b8152600401808060200182810382526023815260200180613acc6023913960400191505060405180910390fd5b600084116117d15760405162461bcd60e51b8152600401808060200182810382526029815260200180613bb06029913960400191505060405180910390fd5b336000908152600d6020526040902054808511156118205760405162461bcd60e51b815260040180806020018281038252602e815260200180613dfc602e913960400191505060405180910390fd5b600b5461182d9086612d32565b600b556001600160a01b0386166000908152600960205260409020546118539086612d32565b6001600160a01b0387166000908152600960205260409020556118768186612c8a565b336000818152600d602090815260409182902093909355805188815290516001600160a01b038a16937fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8928290030190a36040805186815290516001600160a01b038816916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600195945050505050565b600154600160a01b900460ff1615611966576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b336000908152600c602052604090205460ff166119b45760405162461bcd60e51b8152600401808060200182810382526021815260200180613c7a6021913960400191505060405180910390fd5b3360008181526003602052604090205460ff1615611a035760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b3360009081526009602052604090205482611a4f5760405162461bcd60e51b8152600401808060200182810382526029815260200180613aa36029913960400191505060405180910390fd5b82811015611a8e5760405162461bcd60e51b8152600401808060200182810382526026815260200180613c546026913960400191505060405180910390fd5b600b54611a9b9084612c8a565b600b55611aa88184612c8a565b33600081815260096020908152604091829020939093558051868152905191927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca592918290030190a260408051848152905160009133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3505050565b600154600090600160a01b900460ff1615611b83576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6008546001600160a01b03163314611bcc5760405162461bcd60e51b8152600401808060200182810382526029815260200180613bff6029913960400191505060405180910390fd5b6001600160a01b0383166000818152600c60209081526040808320805460ff19166001179055600d825291829020859055815185815291517f46980fca912ef9bcdbd36877427b6b90e860769f604e89c0e67720cece530d209281900390910190a250600192915050565b6040805180820190915260018152601960f91b602082015290565b6000546001600160a01b03163314611c9f576040805162461bcd60e51b81526020600482018190526024820152600080516020613d16833981519152604482015290519081900360640190fd5b6001600160a01b038116611ce45760405162461bcd60e51b8152600401808060200182810382526028815260200180613a506028913960400191505060405180910390fd5b600180546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fb80482a293ca2e013eda8683c9bd7fc8347cfdaeea5ede58cba46df502c2a60490600090a250565b600154600160a01b900460ff1615611d86576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b611d938585858585612d8c565b5050505050565b600154600160a01b900460ff1681565b6001600160a01b031660009081526009602052604090205490565b6001600160a01b031660009081526011602052604090205490565b7fd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de881565b6001546001600160a01b03163314611e4d5760405162461bcd60e51b8152600401808060200182810382526022815260200180613e2a6022913960400191505060405180910390fd5b6001805460ff60a01b1916600160a01b1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b6001600160a01b03166000908152600d602052604090205490565b6000546001600160a01b031690565b6005805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610c5e5780601f10610c3357610100808354040283529160200191610c5e565b6001546001600160a01b031681565b7f7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a226781565b600154600090600160a01b900460ff1615611f98576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526003602052604090205460ff1615611fe75760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038416600090815260036020526040902054849060ff16156120415760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b610d6f338686612eb6565b600154600090600160a01b900460ff16156120a1576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526003602052604090205460ff16156120f05760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038416600090815260036020526040902054849060ff161561214a5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b610d6f338686612afb565b6000546001600160a01b031633146121a2576040805162461bcd60e51b81526020600482018190526024820152600080516020613d16833981519152604482015290519081900360640190fd5b6001600160a01b0381166121e75760405162461bcd60e51b815260040180806020018281038252602f815260200180613c9b602f913960400191505060405180910390fd5b600880546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fdb66dfa9c6b8f5226fe9aac7e51897ae8ee94ac31dc70bb6c9900b2574b707e690600090a250565b6001600160a01b03166000908152600c602052604090205460ff1690565b6000546001600160a01b031633146122a2576040805162461bcd60e51b81526020600482018190526024820152600080516020613d16833981519152604482015290519081900360640190fd5b6001600160a01b0381166122e75760405162461bcd60e51b8152600401808060200182810382526032815260200180613ef26032913960400191505060405180910390fd5b600280546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fc67398012c111ce95ecb7429b933096c977380ee6c421175a71a4a4c6c88c06e90600090a250565b600e546001600160a01b031633146123805760405162461bcd60e51b8152600401808060200182810382526024815260200180613cca6024913960400191505060405180910390fd5b6123946001600160a01b0384168383612f05565b505050565b6002546001600160a01b031681565b600154600160a01b900460ff16156123fa576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6001600160a01b038716600090815260036020526040902054879060ff16156124545760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038716600090815260036020526040902054879060ff16156124ae5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6124bd89898989898989612f57565b505050505050505050565b600854600160a01b900460ff1680156124e4575060125460ff16155b6124ed57600080fd5b6124f9600483836139a9565b5061255282828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506040805180820190915260018152601960f91b602082015291506130b29050565b600f5550506012805460ff19166001179055565b7f158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a159742981565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205490565b600154600160a01b900460ff1615612607576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6001600160a01b038916600090815260036020526040902054899060ff16156126615760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038916600090815260036020526040902054899060ff16156126bb5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6126cc8b8b8b8b8b8b8b8b8b613124565b5050505050505050505050565b6007805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610c5e5780601f10610c3357610100808354040283529160200191610c5e565b6001600160a01b03919091166000908152601060209081526040808320938352929052205460ff1690565b600154600160a01b900460ff16156127b1576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6001600160a01b038916600090815260036020526040902054899060ff161561280b5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038916600090815260036020526040902054899060ff16156128655760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6126cc8b8b8b8b8b8b8b8b8b613232565b6000546001600160a01b031633146128c3576040805162461bcd60e51b81526020600482018190526024820152600080516020613d16833981519152604482015290519081900360640190fd5b6001600160a01b0381166129085760405162461bcd60e51b8152600401808060200182810382526026815260200180613b156026913960400191505060405180910390fd5b600054604080516001600160a01b039283168152918316602083015280517f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09281900390910190a161295981612cd3565b50565b6002546001600160a01b031633146129a55760405162461bcd60e51b815260040180806020018281038252602c815260200180613c28602c913960400191505060405180910390fd5b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b8559190a250565b6001600160a01b031660009081526003602052604090205460ff1690565b6001600160a01b038316612a545760405162461bcd60e51b8152600401808060200182810382526024815260200180613dd86024913960400191505060405180910390fd5b6001600160a01b038216612a995760405162461bcd60e51b8152600401808060200182810382526022815260200180613b3b6022913960400191505060405180910390fd5b6001600160a01b038084166000818152600a6020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316612b405760405162461bcd60e51b8152600401808060200182810382526025815260200180613db36025913960400191505060405180910390fd5b6001600160a01b038216612b855760405162461bcd60e51b8152600401808060200182810382526023815260200180613a2d6023913960400191505060405180910390fd5b6001600160a01b038316600090815260096020526040902054811115612bdc5760405162461bcd60e51b8152600401808060200182810382526026815260200180613bd96026913960400191505060405180910390fd5b6001600160a01b038316600090815260096020526040902054612bff9082612c8a565b6001600160a01b038085166000908152600960205260408082209390935590841681522054612c2e9082612d32565b6001600160a01b0380841660008181526009602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000612ccc83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061330b565b9392505050565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038084166000908152600a60209081526040808320938616835292905220546123949084908490612d2d9085612d32565b612a0f565b600082820183811015612ccc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b612d9685856133a2565b604080517f158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a159742960208201526001600160a01b0387168183018190526060828101889052835180840390910181526080909201909252600f54909190612dfd9086868686613409565b6001600160a01b031614612e58576040805162461bcd60e51b815260206004820152601e60248201527f46696174546f6b656e56323a20696e76616c6964207369676e61747572650000604482015290519081900360640190fd5b6001600160a01b0386166000818152601060209081526040808320898452909152808220805460ff19166001179055518792917f1cdd46ff242716cdaa72d159d339a485b3438398348d68f09d7c8c0a59353d8191a3505050505050565b6123948383612d2d84604051806060016040528060258152602001613f6e602591396001600160a01b03808a166000908152600a60209081526040808320938c1683529290522054919061330b565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052612394908490613460565b42841015612fac576040805162461bcd60e51b815260206004820152601e60248201527f46696174546f6b656e56323a207065726d697420697320657870697265640000604482015290519081900360640190fd5b6001600160a01b0380881660008181526011602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c992810192909252818301849052938a1660608201526080810189905260a081019390935260c08084018890528151808503909101815260e09093019052600f546130429086868686613409565b6001600160a01b03161461309d576040805162461bcd60e51b815260206004820152601a60248201527f454950323631323a20696e76616c6964207369676e6174757265000000000000604482015290519081900360640190fd5b6130a8888888612a0f565b5050505050505050565b8151602092830120815191830191909120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818601528082019390935260608301919091524660808301523060a0808401919091528151808403909101815260c09092019052805191012090565b61313089858888613511565b604080517f7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a226760208201526001600160a01b03808c16828401819052908b166060830152608082018a905260a0820189905260c0820188905260e080830188905283518084039091018152610100909201909252600f549091906131b69086868686613409565b6001600160a01b031614613211576040805162461bcd60e51b815260206004820152601e60248201527f46696174546f6b656e56323a20696e76616c6964207369676e61747572650000604482015290519081900360640190fd5b61321b8a8661359d565b6132268a8a8a612afb565b50505050505050505050565b6001600160a01b03881633146132795760405162461bcd60e51b8152600401808060200182810382526025815260200180613d646025913960400191505060405180910390fd5b61328589858888613511565b604080517fd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de860208201526001600160a01b03808c16828401819052908b166060830152608082018a905260a0820189905260c0820188905260e080830188905283518084039091018152610100909201909252600f549091906131b69086868686613409565b6000818484111561339a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561335f578181015183820152602001613347565b50505050905090810190601f16801561338c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038216600090815260106020908152604080832084845290915290205460ff16156134055760405162461bcd60e51b815260040180806020018281038252602e815260200180613ec4602e913960400191505060405180910390fd5b5050565b80516020808301919091206040805161190160f01b81850152602281018990526042808201939093528151808203909301835260620190528051910120600090613455818787876135f7565b979650505050505050565b60606134b5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661377b9092919063ffffffff16565b805190915015612394578080602001905160208110156134d457600080fd5b50516123945760405162461bcd60e51b815260040180806020018281038252602a815260200180613e72602a913960400191505060405180910390fd5b81421161354f5760405162461bcd60e51b815260040180806020018281038252602b815260200180613a78602b913960400191505060405180910390fd5b80421061358d5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f496025913960400191505060405180910390fd5b61359784846133a2565b50505050565b6001600160a01b0382166000818152601060209081526040808320858452909152808220805460ff19166001179055518392917f98de503528ee59b575ef0c0a2576a82497bfc029a5685b209e9ec333479b10a591a35050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156136585760405162461bcd60e51b8152600401808060200182810382526026815260200180613e4c6026913960400191505060405180910390fd5b8360ff16601b1415801561367057508360ff16601c14155b156136ac5760405162461bcd60e51b8152600401808060200182810382526026815260200180613aef6026913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015613708573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116613770576040805162461bcd60e51b815260206004820152601c60248201527f45435265636f7665723a20696e76616c6964207369676e617475726500000000604482015290519081900360640190fd5b90505b949350505050565b606061377384846000856060613790856138f2565b6137e1576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106138205780518252601f199092019160209182019101613801565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114613882576040519150601f19603f3d011682016040523d82523d6000602084013e613887565b606091505b5091509150811561389b5791506137739050565b8051156138ab5780518082602001fd5b60405162461bcd60e51b815260206004820181815286516024840152865187939192839260440191908501908083836000831561335f578181015183820152602001613347565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590613773575050151592915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061396c57805160ff1916838001178555613999565b82800160010185558215613999579182015b8281111561399957825182559160200191906001019061397e565b506139a5929150613a17565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106139ea5782800160ff19823516178555613999565b82800160010185558215613999579182015b828111156139995782358255916020019190600101906139fc565b5b808211156139a55760008155600101613a1856fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573735061757361626c653a206e65772070617573657220697320746865207a65726f206164647265737346696174546f6b656e56323a20617574686f72697a6174696f6e206973206e6f74207965742076616c696446696174546f6b656e3a206275726e20616d6f756e74206e6f742067726561746572207468616e203046696174546f6b656e3a206d696e7420746f20746865207a65726f206164647265737345435265636f7665723a20696e76616c6964207369676e6174757265202776272076616c75654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737346696174546f6b656e3a206e65772070617573657220697320746865207a65726f2061646472657373526573637561626c653a206e6577207265736375657220697320746865207a65726f206164647265737346696174546f6b656e3a206d696e7420616d6f756e74206e6f742067726561746572207468616e203045524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636546696174546f6b656e3a2063616c6c6572206973206e6f7420746865206d61737465724d696e746572426c61636b6c69737461626c653a2063616c6c6572206973206e6f742074686520626c61636b6c697374657246696174546f6b656e3a206275726e20616d6f756e7420657863656564732062616c616e636546696174546f6b656e3a2063616c6c6572206973206e6f742061206d696e74657246696174546f6b656e3a206e6577206d61737465724d696e74657220697320746865207a65726f2061646472657373526573637561626c653a2063616c6c6572206973206e6f7420746865207265736375657245524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657246696174546f6b656e3a206e657720626c61636b6c697374657220697320746865207a65726f206164647265737346696174546f6b656e56323a2063616c6c6572206d7573742062652074686520706179656546696174546f6b656e3a20636f6e747261637420697320616c726561647920696e697469616c697a656445524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737346696174546f6b656e3a206d696e7420616d6f756e742065786365656473206d696e746572416c6c6f77616e63655061757361626c653a2063616c6c6572206973206e6f74207468652070617573657245435265636f7665723a20696e76616c6964207369676e6174757265202773272076616c75655361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656446696174546f6b656e3a206e6577206f776e657220697320746865207a65726f206164647265737346696174546f6b656e56323a20617574686f72697a6174696f6e2069732075736564206f722063616e63656c6564426c61636b6c69737461626c653a206e657720626c61636b6c697374657220697320746865207a65726f2061646472657373426c61636b6c69737461626c653a206163636f756e7420697320626c61636b6c697374656446696174546f6b656e56323a20617574686f72697a6174696f6e206973206578706972656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212208a31b3c54babfcefa9b4a7ceae0aa8f4acc44a24af3eb06388daff31702d26f664736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102d65760003560e01c80637f2eecc311610182578063b2118a8d116100e9578063e3ee160e116100a2578063ef55bec61161007c578063ef55bec614610b07578063f2fde38b14610b66578063f9f92be414610b8c578063fe575a8714610bb2576102d6565b8063e3ee160e14610a74578063e5a6b10f14610ad3578063e94a010214610adb576102d6565b8063b2118a8d14610941578063bd10243014610977578063d505accf1461097f578063d608ea64146109d0578063d916948714610a3e578063dd62ed3e14610a46576102d6565b8063a0cc6a681161013b578063a0cc6a681461086f578063a457c2d714610877578063a9059cbb146108a3578063aa20e1e4146108cf578063aa271e1a146108f5578063ad38bf221461091b576102d6565b80637f2eecc3146108215780638456cb59146108295780638a6db9c3146108315780638da5cb5b1461085757806395d89b411461085f5780639fd0506d14610867576102d6565b80633644e515116102415780634e44d956116101fa5780635a049a70116101d45780635a049a701461078c5780635c975abb146107cd57806370a08231146107d55780637ecebe00146107fb576102d6565b80634e44d9561461073257806354fd4d501461075e578063554bab3c14610766576102d6565b80633644e515146106a557806338a63183146106ad57806339509351146106b55780633f4ba83a146106e157806340c10f19146106e957806342966c6814610715576102d6565b80632fc81e09116102935780632fc81e09146104365780633092afd51461045c57806330adf81f14610482578063313ce5671461048a5780633357162b146104a857806335d99f3514610681576102d6565b806306fdde03146102db578063095ea7b31461035857806318160ddd146103985780631a895266146103b257806323b872dd146103da5780632ab6004514610410575b600080fd5b6102e3610bd8565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561031d578181015183820152602001610305565b50505050905090810190601f16801561034a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103846004803603604081101561036e57600080fd5b506001600160a01b038135169060200135610c66565b604080519115158252519081900360200190f35b6103a0610d7a565b60408051918252519081900360200190f35b6103d8600480360360208110156103c857600080fd5b50356001600160a01b0316610d80565b005b610384600480360360608110156103f057600080fd5b506001600160a01b03813581169160208101359091169060400135610e12565b6103d86004803603602081101561042657600080fd5b50356001600160a01b0316611037565b6103d86004803603602081101561044c57600080fd5b50356001600160a01b0316611113565b6103846004803603602081101561047257600080fd5b50356001600160a01b0316611173565b6103a061121a565b61049261123e565b6040805160ff9092168252519081900360200190f35b6103d860048036036101008110156104bf57600080fd5b810190602081018135600160201b8111156104d957600080fd5b8201836020820111156104eb57600080fd5b803590602001918460018302840111600160201b8311171561050c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561055e57600080fd5b82018360208201111561057057600080fd5b803590602001918460018302840111600160201b8311171561059157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156105e357600080fd5b8201836020820111156105f557600080fd5b803590602001918460018302840111600160201b8311171561061657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050813560ff1692505060208101356001600160a01b0390811691604081013582169160608201358116916080013516611247565b610689611453565b604080516001600160a01b039092168252519081900360200190f35b6103a0611462565b610689611468565b610384600480360360408110156106cb57600080fd5b506001600160a01b038135169060200135611477565b6103d8611580565b610384600480360360408110156106ff57600080fd5b506001600160a01b038135169060200135611601565b6103d86004803603602081101561072b57600080fd5b5035611914565b6103846004803603604081101561074857600080fd5b506001600160a01b038135169060200135611b2e565b6102e3611c37565b6103d86004803603602081101561077c57600080fd5b50356001600160a01b0316611c52565b6103d8600480360360a08110156107a257600080fd5b506001600160a01b038135169060208101359060ff6040820135169060608101359060800135611d34565b610384611d9a565b6103a0600480360360208110156107eb57600080fd5b50356001600160a01b0316611daa565b6103a06004803603602081101561081157600080fd5b50356001600160a01b0316611dc5565b6103a0611de0565b6103d8611e04565b6103a06004803603602081101561084757600080fd5b50356001600160a01b0316611e8b565b610689611ea6565b6102e3611eb5565b610689611f10565b6103a0611f1f565b6103846004803603604081101561088d57600080fd5b506001600160a01b038135169060200135611f43565b610384600480360360408110156108b957600080fd5b506001600160a01b03813516906020013561204c565b6103d8600480360360208110156108e557600080fd5b50356001600160a01b0316612155565b6103846004803603602081101561090b57600080fd5b50356001600160a01b0316612237565b6103d86004803603602081101561093157600080fd5b50356001600160a01b0316612255565b6103d86004803603606081101561095757600080fd5b506001600160a01b03813581169160208101359091169060400135612337565b610689612399565b6103d8600480360360e081101561099557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356123a8565b6103d8600480360360208110156109e657600080fd5b810190602081018135600160201b811115610a0057600080fd5b820183602082011115610a1257600080fd5b803590602001918460018302840111600160201b83111715610a3357600080fd5b5090925090506124c8565b6103a0612566565b6103a060048036036040811015610a5c57600080fd5b506001600160a01b038135811691602001351661258a565b6103d86004803603610120811015610a8b57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a08101359060ff60c0820135169060e08101359061010001356125b5565b6102e36126d9565b61038460048036036040811015610af157600080fd5b506001600160a01b038135169060200135612734565b6103d86004803603610120811015610b1e57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a08101359060ff60c0820135169060e081013590610100013561275f565b6103d860048036036020811015610b7c57600080fd5b50356001600160a01b0316612876565b6103d860048036036020811015610ba257600080fd5b50356001600160a01b031661295c565b61038460048036036020811015610bc857600080fd5b50356001600160a01b03166129f1565b6004805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610c5e5780601f10610c3357610100808354040283529160200191610c5e565b820191906000526020600020905b815481529060010190602001808311610c4157829003601f168201915b505050505081565b600154600090600160a01b900460ff1615610cbb576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526003602052604090205460ff1615610d0a5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038416600090815260036020526040902054849060ff1615610d645760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b610d6f338686612a0f565b506001949350505050565b600b5490565b6002546001600160a01b03163314610dc95760405162461bcd60e51b815260040180806020018281038252602c815260200180613c28602c913960400191505060405180910390fd5b6001600160a01b038116600081815260036020526040808220805460ff19169055517f117e3210bb9aa7d9baff172026820255c6f6c30ba8999d1c2fd88e2848137c4e9190a250565b600154600090600160a01b900460ff1615610e67576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526003602052604090205460ff1615610eb65760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038516600090815260036020526040902054859060ff1615610f105760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038516600090815260036020526040902054859060ff1615610f6a5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b0387166000908152600a60209081526040808320338452909152902054851115610fcc5760405162461bcd60e51b8152600401808060200182810382526028815260200180613cee6028913960400191505060405180910390fd5b610fd7878787612afb565b6001600160a01b0387166000908152600a602090815260408083203384529091529020546110059086612c8a565b6001600160a01b0388166000908152600a60209081526040808320338452909152902055600193505050509392505050565b6000546001600160a01b03163314611084576040805162461bcd60e51b81526020600482018190526024820152600080516020613d16833981519152604482015290519081900360640190fd5b6001600160a01b0381166110c95760405162461bcd60e51b815260040180806020018281038252602a815260200180613b86602a913960400191505060405180910390fd5b600e80546001600160a01b0319166001600160a01b0383169081179091556040517fe475e580d85111348e40d8ca33cfdd74c30fe1655c2d8537a13abc10065ffa5a90600090a250565b60125460ff1660011461112557600080fd5b30600090815260096020526040902054801561114657611146308383612afb565b5050306000908152600360205260409020805460ff19908116600117909155601280549091166002179055565b6008546000906001600160a01b031633146111bf5760405162461bcd60e51b8152600401808060200182810382526029815260200180613bff6029913960400191505060405180910390fd5b6001600160a01b0382166000818152600c60209081526040808320805460ff19169055600d909152808220829055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a2506001919050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60065460ff1681565b600854600160a01b900460ff16156112905760405162461bcd60e51b815260040180806020018281038252602a815260200180613d89602a913960400191505060405180910390fd5b6001600160a01b0384166112d55760405162461bcd60e51b815260040180806020018281038252602f815260200180613c9b602f913960400191505060405180910390fd5b6001600160a01b03831661131a5760405162461bcd60e51b8152600401808060200182810382526029815260200180613b5d6029913960400191505060405180910390fd5b6001600160a01b03821661135f5760405162461bcd60e51b815260040180806020018281038252602e815260200180613d36602e913960400191505060405180910390fd5b6001600160a01b0381166113a45760405162461bcd60e51b8152600401808060200182810382526028815260200180613e9c6028913960400191505060405180910390fd5b87516113b79060049060208b019061392b565b5086516113cb9060059060208a019061392b565b5085516113df90600790602089019061392b565b506006805460ff191660ff8716179055600880546001600160a01b03199081166001600160a01b03878116919091179092556001805482168684161790556002805490911691841691909117905561143681612cd3565b50506008805460ff60a01b1916600160a01b179055505050505050565b6008546001600160a01b031681565b600f5481565b600e546001600160a01b031690565b600154600090600160a01b900460ff16156114cc576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526003602052604090205460ff161561151b5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038416600090815260036020526040902054849060ff16156115755760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b610d6f338686612cf5565b6001546001600160a01b031633146115c95760405162461bcd60e51b8152600401808060200182810382526022815260200180613e2a6022913960400191505060405180910390fd5b6001805460ff60a01b191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600154600090600160a01b900460ff1615611656576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b336000908152600c602052604090205460ff166116a45760405162461bcd60e51b8152600401808060200182810382526021815260200180613c7a6021913960400191505060405180910390fd5b3360008181526003602052604090205460ff16156116f35760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038416600090815260036020526040902054849060ff161561174d5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b0385166117925760405162461bcd60e51b8152600401808060200182810382526023815260200180613acc6023913960400191505060405180910390fd5b600084116117d15760405162461bcd60e51b8152600401808060200182810382526029815260200180613bb06029913960400191505060405180910390fd5b336000908152600d6020526040902054808511156118205760405162461bcd60e51b815260040180806020018281038252602e815260200180613dfc602e913960400191505060405180910390fd5b600b5461182d9086612d32565b600b556001600160a01b0386166000908152600960205260409020546118539086612d32565b6001600160a01b0387166000908152600960205260409020556118768186612c8a565b336000818152600d602090815260409182902093909355805188815290516001600160a01b038a16937fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8928290030190a36040805186815290516001600160a01b038816916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600195945050505050565b600154600160a01b900460ff1615611966576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b336000908152600c602052604090205460ff166119b45760405162461bcd60e51b8152600401808060200182810382526021815260200180613c7a6021913960400191505060405180910390fd5b3360008181526003602052604090205460ff1615611a035760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b3360009081526009602052604090205482611a4f5760405162461bcd60e51b8152600401808060200182810382526029815260200180613aa36029913960400191505060405180910390fd5b82811015611a8e5760405162461bcd60e51b8152600401808060200182810382526026815260200180613c546026913960400191505060405180910390fd5b600b54611a9b9084612c8a565b600b55611aa88184612c8a565b33600081815260096020908152604091829020939093558051868152905191927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca592918290030190a260408051848152905160009133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3505050565b600154600090600160a01b900460ff1615611b83576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6008546001600160a01b03163314611bcc5760405162461bcd60e51b8152600401808060200182810382526029815260200180613bff6029913960400191505060405180910390fd5b6001600160a01b0383166000818152600c60209081526040808320805460ff19166001179055600d825291829020859055815185815291517f46980fca912ef9bcdbd36877427b6b90e860769f604e89c0e67720cece530d209281900390910190a250600192915050565b6040805180820190915260018152601960f91b602082015290565b6000546001600160a01b03163314611c9f576040805162461bcd60e51b81526020600482018190526024820152600080516020613d16833981519152604482015290519081900360640190fd5b6001600160a01b038116611ce45760405162461bcd60e51b8152600401808060200182810382526028815260200180613a506028913960400191505060405180910390fd5b600180546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fb80482a293ca2e013eda8683c9bd7fc8347cfdaeea5ede58cba46df502c2a60490600090a250565b600154600160a01b900460ff1615611d86576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b611d938585858585612d8c565b5050505050565b600154600160a01b900460ff1681565b6001600160a01b031660009081526009602052604090205490565b6001600160a01b031660009081526011602052604090205490565b7fd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de881565b6001546001600160a01b03163314611e4d5760405162461bcd60e51b8152600401808060200182810382526022815260200180613e2a6022913960400191505060405180910390fd5b6001805460ff60a01b1916600160a01b1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b6001600160a01b03166000908152600d602052604090205490565b6000546001600160a01b031690565b6005805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610c5e5780601f10610c3357610100808354040283529160200191610c5e565b6001546001600160a01b031681565b7f7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a226781565b600154600090600160a01b900460ff1615611f98576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526003602052604090205460ff1615611fe75760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038416600090815260036020526040902054849060ff16156120415760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b610d6f338686612eb6565b600154600090600160a01b900460ff16156120a1576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526003602052604090205460ff16156120f05760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038416600090815260036020526040902054849060ff161561214a5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b610d6f338686612afb565b6000546001600160a01b031633146121a2576040805162461bcd60e51b81526020600482018190526024820152600080516020613d16833981519152604482015290519081900360640190fd5b6001600160a01b0381166121e75760405162461bcd60e51b815260040180806020018281038252602f815260200180613c9b602f913960400191505060405180910390fd5b600880546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fdb66dfa9c6b8f5226fe9aac7e51897ae8ee94ac31dc70bb6c9900b2574b707e690600090a250565b6001600160a01b03166000908152600c602052604090205460ff1690565b6000546001600160a01b031633146122a2576040805162461bcd60e51b81526020600482018190526024820152600080516020613d16833981519152604482015290519081900360640190fd5b6001600160a01b0381166122e75760405162461bcd60e51b8152600401808060200182810382526032815260200180613ef26032913960400191505060405180910390fd5b600280546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fc67398012c111ce95ecb7429b933096c977380ee6c421175a71a4a4c6c88c06e90600090a250565b600e546001600160a01b031633146123805760405162461bcd60e51b8152600401808060200182810382526024815260200180613cca6024913960400191505060405180910390fd5b6123946001600160a01b0384168383612f05565b505050565b6002546001600160a01b031681565b600154600160a01b900460ff16156123fa576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6001600160a01b038716600090815260036020526040902054879060ff16156124545760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038716600090815260036020526040902054879060ff16156124ae5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6124bd89898989898989612f57565b505050505050505050565b600854600160a01b900460ff1680156124e4575060125460ff16155b6124ed57600080fd5b6124f9600483836139a9565b5061255282828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506040805180820190915260018152601960f91b602082015291506130b29050565b600f5550506012805460ff19166001179055565b7f158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a159742981565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205490565b600154600160a01b900460ff1615612607576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6001600160a01b038916600090815260036020526040902054899060ff16156126615760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038916600090815260036020526040902054899060ff16156126bb5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6126cc8b8b8b8b8b8b8b8b8b613124565b5050505050505050505050565b6007805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610c5e5780601f10610c3357610100808354040283529160200191610c5e565b6001600160a01b03919091166000908152601060209081526040808320938352929052205460ff1690565b600154600160a01b900460ff16156127b1576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6001600160a01b038916600090815260036020526040902054899060ff161561280b5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6001600160a01b038916600090815260036020526040902054899060ff16156128655760405162461bcd60e51b8152600401808060200182810382526025815260200180613f246025913960400191505060405180910390fd5b6126cc8b8b8b8b8b8b8b8b8b613232565b6000546001600160a01b031633146128c3576040805162461bcd60e51b81526020600482018190526024820152600080516020613d16833981519152604482015290519081900360640190fd5b6001600160a01b0381166129085760405162461bcd60e51b8152600401808060200182810382526026815260200180613b156026913960400191505060405180910390fd5b600054604080516001600160a01b039283168152918316602083015280517f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09281900390910190a161295981612cd3565b50565b6002546001600160a01b031633146129a55760405162461bcd60e51b815260040180806020018281038252602c815260200180613c28602c913960400191505060405180910390fd5b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b8559190a250565b6001600160a01b031660009081526003602052604090205460ff1690565b6001600160a01b038316612a545760405162461bcd60e51b8152600401808060200182810382526024815260200180613dd86024913960400191505060405180910390fd5b6001600160a01b038216612a995760405162461bcd60e51b8152600401808060200182810382526022815260200180613b3b6022913960400191505060405180910390fd5b6001600160a01b038084166000818152600a6020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316612b405760405162461bcd60e51b8152600401808060200182810382526025815260200180613db36025913960400191505060405180910390fd5b6001600160a01b038216612b855760405162461bcd60e51b8152600401808060200182810382526023815260200180613a2d6023913960400191505060405180910390fd5b6001600160a01b038316600090815260096020526040902054811115612bdc5760405162461bcd60e51b8152600401808060200182810382526026815260200180613bd96026913960400191505060405180910390fd5b6001600160a01b038316600090815260096020526040902054612bff9082612c8a565b6001600160a01b038085166000908152600960205260408082209390935590841681522054612c2e9082612d32565b6001600160a01b0380841660008181526009602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000612ccc83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061330b565b9392505050565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038084166000908152600a60209081526040808320938616835292905220546123949084908490612d2d9085612d32565b612a0f565b600082820183811015612ccc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b612d9685856133a2565b604080517f158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a159742960208201526001600160a01b0387168183018190526060828101889052835180840390910181526080909201909252600f54909190612dfd9086868686613409565b6001600160a01b031614612e58576040805162461bcd60e51b815260206004820152601e60248201527f46696174546f6b656e56323a20696e76616c6964207369676e61747572650000604482015290519081900360640190fd5b6001600160a01b0386166000818152601060209081526040808320898452909152808220805460ff19166001179055518792917f1cdd46ff242716cdaa72d159d339a485b3438398348d68f09d7c8c0a59353d8191a3505050505050565b6123948383612d2d84604051806060016040528060258152602001613f6e602591396001600160a01b03808a166000908152600a60209081526040808320938c1683529290522054919061330b565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052612394908490613460565b42841015612fac576040805162461bcd60e51b815260206004820152601e60248201527f46696174546f6b656e56323a207065726d697420697320657870697265640000604482015290519081900360640190fd5b6001600160a01b0380881660008181526011602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c992810192909252818301849052938a1660608201526080810189905260a081019390935260c08084018890528151808503909101815260e09093019052600f546130429086868686613409565b6001600160a01b03161461309d576040805162461bcd60e51b815260206004820152601a60248201527f454950323631323a20696e76616c6964207369676e6174757265000000000000604482015290519081900360640190fd5b6130a8888888612a0f565b5050505050505050565b8151602092830120815191830191909120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818601528082019390935260608301919091524660808301523060a0808401919091528151808403909101815260c09092019052805191012090565b61313089858888613511565b604080517f7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a226760208201526001600160a01b03808c16828401819052908b166060830152608082018a905260a0820189905260c0820188905260e080830188905283518084039091018152610100909201909252600f549091906131b69086868686613409565b6001600160a01b031614613211576040805162461bcd60e51b815260206004820152601e60248201527f46696174546f6b656e56323a20696e76616c6964207369676e61747572650000604482015290519081900360640190fd5b61321b8a8661359d565b6132268a8a8a612afb565b50505050505050505050565b6001600160a01b03881633146132795760405162461bcd60e51b8152600401808060200182810382526025815260200180613d646025913960400191505060405180910390fd5b61328589858888613511565b604080517fd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de860208201526001600160a01b03808c16828401819052908b166060830152608082018a905260a0820189905260c0820188905260e080830188905283518084039091018152610100909201909252600f549091906131b69086868686613409565b6000818484111561339a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561335f578181015183820152602001613347565b50505050905090810190601f16801561338c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038216600090815260106020908152604080832084845290915290205460ff16156134055760405162461bcd60e51b815260040180806020018281038252602e815260200180613ec4602e913960400191505060405180910390fd5b5050565b80516020808301919091206040805161190160f01b81850152602281018990526042808201939093528151808203909301835260620190528051910120600090613455818787876135f7565b979650505050505050565b60606134b5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661377b9092919063ffffffff16565b805190915015612394578080602001905160208110156134d457600080fd5b50516123945760405162461bcd60e51b815260040180806020018281038252602a815260200180613e72602a913960400191505060405180910390fd5b81421161354f5760405162461bcd60e51b815260040180806020018281038252602b815260200180613a78602b913960400191505060405180910390fd5b80421061358d5760405162461bcd60e51b8152600401808060200182810382526025815260200180613f496025913960400191505060405180910390fd5b61359784846133a2565b50505050565b6001600160a01b0382166000818152601060209081526040808320858452909152808220805460ff19166001179055518392917f98de503528ee59b575ef0c0a2576a82497bfc029a5685b209e9ec333479b10a591a35050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156136585760405162461bcd60e51b8152600401808060200182810382526026815260200180613e4c6026913960400191505060405180910390fd5b8360ff16601b1415801561367057508360ff16601c14155b156136ac5760405162461bcd60e51b8152600401808060200182810382526026815260200180613aef6026913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015613708573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116613770576040805162461bcd60e51b815260206004820152601c60248201527f45435265636f7665723a20696e76616c6964207369676e617475726500000000604482015290519081900360640190fd5b90505b949350505050565b606061377384846000856060613790856138f2565b6137e1576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106138205780518252601f199092019160209182019101613801565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114613882576040519150601f19603f3d011682016040523d82523d6000602084013e613887565b606091505b5091509150811561389b5791506137739050565b8051156138ab5780518082602001fd5b60405162461bcd60e51b815260206004820181815286516024840152865187939192839260440191908501908083836000831561335f578181015183820152602001613347565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590613773575050151592915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061396c57805160ff1916838001178555613999565b82800160010185558215613999579182015b8281111561399957825182559160200191906001019061397e565b506139a5929150613a17565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106139ea5782800160ff19823516178555613999565b82800160010185558215613999579182015b828111156139995782358255916020019190600101906139fc565b5b808211156139a55760008155600101613a1856fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573735061757361626c653a206e65772070617573657220697320746865207a65726f206164647265737346696174546f6b656e56323a20617574686f72697a6174696f6e206973206e6f74207965742076616c696446696174546f6b656e3a206275726e20616d6f756e74206e6f742067726561746572207468616e203046696174546f6b656e3a206d696e7420746f20746865207a65726f206164647265737345435265636f7665723a20696e76616c6964207369676e6174757265202776272076616c75654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737346696174546f6b656e3a206e65772070617573657220697320746865207a65726f2061646472657373526573637561626c653a206e6577207265736375657220697320746865207a65726f206164647265737346696174546f6b656e3a206d696e7420616d6f756e74206e6f742067726561746572207468616e203045524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636546696174546f6b656e3a2063616c6c6572206973206e6f7420746865206d61737465724d696e746572426c61636b6c69737461626c653a2063616c6c6572206973206e6f742074686520626c61636b6c697374657246696174546f6b656e3a206275726e20616d6f756e7420657863656564732062616c616e636546696174546f6b656e3a2063616c6c6572206973206e6f742061206d696e74657246696174546f6b656e3a206e6577206d61737465724d696e74657220697320746865207a65726f2061646472657373526573637561626c653a2063616c6c6572206973206e6f7420746865207265736375657245524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657246696174546f6b656e3a206e657720626c61636b6c697374657220697320746865207a65726f206164647265737346696174546f6b656e56323a2063616c6c6572206d7573742062652074686520706179656546696174546f6b656e3a20636f6e747261637420697320616c726561647920696e697469616c697a656445524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737346696174546f6b656e3a206d696e7420616d6f756e742065786365656473206d696e746572416c6c6f77616e63655061757361626c653a2063616c6c6572206973206e6f74207468652070617573657245435265636f7665723a20696e76616c6964207369676e6174757265202773272076616c75655361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656446696174546f6b656e3a206e6577206f776e657220697320746865207a65726f206164647265737346696174546f6b656e56323a20617574686f72697a6174696f6e2069732075736564206f722063616e63656c6564426c61636b6c69737461626c653a206e657720626c61636b6c697374657220697320746865207a65726f2061646472657373426c61636b6c69737461626c653a206163636f756e7420697320626c61636b6c697374656446696174546f6b656e56323a20617574686f72697a6174696f6e206973206578706972656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212208a31b3c54babfcefa9b4a7ceae0aa8f4acc44a24af3eb06388daff31702d26f664736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "params": {
          "owner": "Token owner's address",
          "spender": "Spender's address"
        },
        "returns": {
          "_0": "Allowance amount"
        }
      },
      "approve(address,uint256)": {
        "params": {
          "spender": "Spender's address",
          "value": "Allowance amount"
        },
        "returns": {
          "_0": "True if successful"
        }
      },
      "authorizationState(address,bytes32)": {
        "details": "Nonces are randomly generated 32-byte data unique to the authorizer's address",
        "params": {
          "authorizer": "Authorizer's address",
          "nonce": "Nonce of the authorization"
        },
        "returns": {
          "_0": "True if the nonce is used"
        }
      },
      "balanceOf(address)": {
        "details": "Get token balance of an account",
        "params": {
          "account": "address The account"
        }
      },
      "blacklist(address)": {
        "details": "Adds account to blacklist",
        "params": {
          "_account": "The address to blacklist"
        }
      },
      "burn(uint256)": {
        "details": "allows a minter to burn some of its own tokens Validates that caller is a minter and that sender is not blacklisted amount is less than or equal to the minter's account balance",
        "params": {
          "_amount": "uint256 the amount of tokens to be burned"
        }
      },
      "cancelAuthorization(address,bytes32,uint8,bytes32,bytes32)": {
        "details": "Works only if the authorization is not yet used.",
        "params": {
          "authorizer": "Authorizer's address",
          "nonce": "Nonce of the authorization",
          "r": "r of the signature",
          "s": "s of the signature",
          "v": "v of the signature"
        }
      },
      "configureMinter(address,uint256)": {
        "details": "Function to add/update a new minter",
        "params": {
          "minter": "The address of the minter",
          "minterAllowedAmount": "The minting amount allowed for the minter"
        },
        "returns": {
          "_0": "True if the operation was successful."
        }
      },
      "decreaseAllowance(address,uint256)": {
        "params": {
          "decrement": "Amount of decrease in allowance",
          "spender": "Spender's address"
        },
        "returns": {
          "_0": "True if successful"
        }
      },
      "increaseAllowance(address,uint256)": {
        "params": {
          "increment": "Amount of increase in allowance",
          "spender": "Spender's address"
        },
        "returns": {
          "_0": "True if successful"
        }
      },
      "initializeV2(string)": {
        "params": {
          "newName": "New token name"
        }
      },
      "initializeV2_1(address)": {
        "params": {
          "lostAndFound": "The address to which the locked funds are sent"
        }
      },
      "isBlacklisted(address)": {
        "details": "Checks if account is blacklisted",
        "params": {
          "_account": "The address to check"
        }
      },
      "isMinter(address)": {
        "details": "Checks if account is a minter",
        "params": {
          "account": "The address to check"
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "_amount": "The amount of tokens to mint. Must be less than or equal to the minterAllowance of the caller.",
          "_to": "The address that will receive the minted tokens."
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "minterAllowance(address)": {
        "details": "Get minter allowance for an account",
        "params": {
          "minter": "The address of the minter"
        }
      },
      "nonces(address)": {
        "params": {
          "owner": "Token owner's address (Authorizer)"
        },
        "returns": {
          "_0": "Next nonce"
        }
      },
      "owner()": {
        "details": "Tells the address of the owner",
        "returns": {
          "_0": "the address of the owner"
        }
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "params": {
          "deadline": "Expiration time, seconds since the epoch",
          "owner": "Token owner's address (Authorizer)",
          "r": "r of the signature",
          "s": "s of the signature",
          "spender": "Spender's address",
          "v": "v of the signature",
          "value": "Amount of allowance"
        }
      },
      "receiveWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
        "details": "This has an additional check to ensure that the payee's address matches the caller of this function to prevent front-running attacks.",
        "params": {
          "from": "Payer's address (Authorizer)",
          "nonce": "Unique nonce",
          "r": "r of the signature",
          "s": "s of the signature",
          "to": "Payee's address",
          "v": "v of the signature",
          "validAfter": "The time after which this is valid (unix time)",
          "validBefore": "The time before which this is valid (unix time)",
          "value": "Amount to be transferred"
        }
      },
      "removeMinter(address)": {
        "details": "Function to remove a minter",
        "params": {
          "minter": "The address of the minter to remove"
        },
        "returns": {
          "_0": "True if the operation was successful."
        }
      },
      "rescueERC20(address,address,uint256)": {
        "params": {
          "amount": "Amount to withdraw",
          "to": "Recipient address",
          "tokenContract": "ERC20 token contract address"
        }
      },
      "rescuer()": {
        "returns": {
          "_0": "Rescuer's address"
        }
      },
      "totalSupply()": {
        "details": "Get totalSupply of token"
      },
      "transfer(address,uint256)": {
        "params": {
          "to": "Payee's address",
          "value": "Transfer amount"
        },
        "returns": {
          "_0": "True if successful"
        }
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "from": "Payer's address",
          "to": "Payee's address",
          "value": "Transfer amount"
        },
        "returns": {
          "_0": "True if successful"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "transferWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
        "params": {
          "from": "Payer's address (Authorizer)",
          "nonce": "Unique nonce",
          "r": "r of the signature",
          "s": "s of the signature",
          "to": "Payee's address",
          "v": "v of the signature",
          "validAfter": "The time after which this is valid (unix time)",
          "validBefore": "The time before which this is valid (unix time)",
          "value": "Amount to be transferred"
        }
      },
      "unBlacklist(address)": {
        "details": "Removes account from blacklist",
        "params": {
          "_account": "The address to remove from the blacklist"
        }
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      },
      "updatePauser(address)": {
        "details": "update the pauser role"
      },
      "updateRescuer(address)": {
        "params": {
          "newRescuer": "New rescuer's address"
        }
      },
      "version()": {
        "returns": {
          "_0": "Version string"
        }
      }
    },
    "title": "FiatToken V2.1",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "allowance(address,address)": {
        "notice": "Amount of remaining tokens spender is allowed to transfer on behalf of the token owner"
      },
      "approve(address,uint256)": {
        "notice": "Set spender's allowance over the caller's tokens to be a given value."
      },
      "authorizationState(address,bytes32)": {
        "notice": "Returns the state of an authorization"
      },
      "cancelAuthorization(address,bytes32,uint8,bytes32,bytes32)": {
        "notice": "Attempt to cancel an authorization"
      },
      "decreaseAllowance(address,uint256)": {
        "notice": "Decrease the allowance by a given decrement"
      },
      "increaseAllowance(address,uint256)": {
        "notice": "Increase the allowance by a given increment"
      },
      "initializeV2(string)": {
        "notice": "Initialize v2"
      },
      "initializeV2_1(address)": {
        "notice": "Initialize v2.1"
      },
      "nonces(address)": {
        "notice": "Nonces for permit"
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Update allowance with a signed permit"
      },
      "receiveWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
        "notice": "Receive a transfer with a signed authorization from the payer"
      },
      "rescueERC20(address,address,uint256)": {
        "notice": "Rescue ERC20 tokens locked up in this contract."
      },
      "rescuer()": {
        "notice": "Returns current rescuer"
      },
      "transfer(address,uint256)": {
        "notice": "Transfer tokens from the caller"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer tokens by spending allowance"
      },
      "transferWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
        "notice": "Execute a transfer with a signed authorization"
      },
      "updateRescuer(address)": {
        "notice": "Assign the rescuer role to a given address."
      },
      "version()": {
        "notice": "Version string for the EIP712 domain separator"
      }
    },
    "notice": "ERC20 Token backed by fiat reserves, version 2.1",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 298,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 391,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "pauser",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 394,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "paused",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 480,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "blacklister",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 484,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "blacklisted",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 617,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 619,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 621,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "decimals",
        "offset": 0,
        "slot": "6",
        "type": "t_uint8"
      },
      {
        "astId": 623,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "currency",
        "offset": 0,
        "slot": "7",
        "type": "t_string_storage"
      },
      {
        "astId": 625,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "masterMinter",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 627,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "initialized",
        "offset": 20,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 631,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "balances",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 637,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "allowed",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 640,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "totalSupply_",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 644,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "minters",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 648,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "minterAllowed",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1788,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "_rescuer",
        "offset": 0,
        "slot": "14",
        "type": "t_address"
      },
      {
        "astId": 2040,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "DOMAIN_SEPARATOR",
        "offset": 0,
        "slot": "15",
        "type": "t_bytes32"
      },
      {
        "astId": 2063,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "_authorizationStates",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))"
      },
      {
        "astId": 2379,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "_permitNonces",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2464,
        "contract": "contracts/mocks/USDC.sol:FiatTokenV2_1",
        "label": "_initializedVersion",
        "offset": 0,
        "slot": "18",
        "type": "t_uint8"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}