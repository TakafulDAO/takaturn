{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_numDecimals",
          "type": "uint8"
        },
        {
          "internalType": "int256",
          "name": "_price",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        }
      ],
      "name": "getRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "name": "setDecimals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_price",
          "type": "int256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setSequencerAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x64f19f7e1931b51bd97a5a3a832ad09c51d64ed9f675d63d40e4b81f0003e09d",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "275712",
    "logsBloom": "0x
    "blockHash": "0x8eeb29709441c91f22841f10c9c094dbe90d8ce6235bf85c5aaaf53bf34f1ea3",
    "transactionHash": "0x64f19f7e1931b51bd97a5a3a832ad09c51d64ed9f675d63d40e4b81f0003e09d",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "275712",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "8",
    "200000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "fcf3f5ced1f3d5f96be9fe2a13cdc034",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_numDecimals\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"_price\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"name\":\"setDecimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_price\",\"type\":\"int256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSequencerAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockSequencer.sol\":\"MockSequencer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/mocks/MockSequencer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.18;\\r\\n\\r\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\ncontract MockSequencer is AggregatorV3Interface {\\r\\n    int256 price;\\r\\n    uint8 numDecimals;\\r\\n    int256 sequencerAnswer;\\r\\n    uint256 time;\\r\\n\\r\\n    constructor(uint8 _numDecimals, int256 _price) {\\r\\n        price = _price;\\r\\n        numDecimals = _numDecimals;\\r\\n        sequencerAnswer = 0;\\r\\n        time = block.timestamp;\\r\\n    }\\r\\n\\r\\n    function decimals() external view override returns (uint8) {\\r\\n        return numDecimals;\\r\\n    }\\r\\n\\r\\n    function description() external pure override returns (string memory) {\\r\\n        return \\\"Mock Sequencer Uptime Feed\\\";\\r\\n    }\\r\\n\\r\\n    function version() external pure override returns (uint256) {\\r\\n        return 1;\\r\\n    }\\r\\n\\r\\n    function setSequencerAnswer() public returns (int256) {\\r\\n        if (sequencerAnswer == 0) {\\r\\n            sequencerAnswer = 1;\\r\\n        } else {\\r\\n            sequencerAnswer = 0;\\r\\n            time = block.timestamp;\\r\\n        }\\r\\n        return sequencerAnswer;\\r\\n    }\\r\\n\\r\\n    function setPrice(int256 _price) public {\\r\\n        price = _price;\\r\\n    }\\r\\n\\r\\n    function setDecimals(uint8 _decimals) public {\\r\\n        numDecimals = _decimals;\\r\\n    }\\r\\n\\r\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\r\\n    // if they do not have data to report, instead of returning unset values\\r\\n    // which could be misinterpreted as actual reported values.\\r\\n    function getRoundData(\\r\\n        uint80 _roundId\\r\\n    )\\r\\n        external\\r\\n        view\\r\\n        override\\r\\n        returns (\\r\\n            uint80 roundId,\\r\\n            int256 answer,\\r\\n            uint256 startedAt,\\r\\n            uint256 updatedAt,\\r\\n            uint80 answeredInRound\\r\\n        )\\r\\n    {\\r\\n        roundId = _roundId;\\r\\n        answer = sequencerAnswer;\\r\\n        startedAt = time;\\r\\n        updatedAt = time;\\r\\n        answeredInRound = 0;\\r\\n    }\\r\\n\\r\\n    function latestRoundData()\\r\\n        external\\r\\n        view\\r\\n        override\\r\\n        returns (\\r\\n            uint80 roundId,\\r\\n            int256 answer,\\r\\n            uint256 startedAt,\\r\\n            uint256 updatedAt,\\r\\n            uint80 answeredInRound\\r\\n        )\\r\\n    {\\r\\n        roundId = 0;\\r\\n        answer = sequencerAnswer;\\r\\n        startedAt = time;\\r\\n        updatedAt = time;\\r\\n        answeredInRound = 0;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x05368bb14d3b01fedb228e5c4616bbc972b1dbf796be63ed0dddf14e3677ceb0\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161035638038061035683398101604081905261002f91610055565b60009081556001805460ff191660ff939093169290921790915560025542600355610089565b6000806040838503121561006857600080fd5b825160ff8116811461007957600080fd5b6020939093015192949293505050565b6102be806100986000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637a1395aa1161005b5780637a1395aa146101035780639a6fc8f514610129578063f7a3080614610180578063feaf968c1461019357600080fd5b806325a0a17a1461008d578063313ce567146100a857806354fd4d50146100bd5780637284e416146100c4575b600080fd5b6100956101a4565b6040519081526020015b60405180910390f35b60015460405160ff909116815260200161009f565b6001610095565b604080518082018252601a81527f4d6f636b2053657175656e63657220557074696d6520466565640000000000006020820152905161009f91906101cb565b610127610111366004610219565b6001805460ff191660ff92909216919091179055565b005b610149610137366004610243565b60025460035491929091908190600090565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a00161009f565b61012761018e36600461026f565b600055565b600254600354600091908083610149565b60006002546000036101ba5760016002556101c4565b6000600255426003555b5060025490565b600060208083528351808285015260005b818110156101f8578581018301518582016040015282016101dc565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561022b57600080fd5b813560ff8116811461023c57600080fd5b9392505050565b60006020828403121561025557600080fd5b813569ffffffffffffffffffff8116811461023c57600080fd5b60006020828403121561028157600080fd5b503591905056fea26469706673582212203fa605e7a0eff4f767a8912a0cc84abc419005f408c08593f41e92331035d4fc64736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80637a1395aa1161005b5780637a1395aa146101035780639a6fc8f514610129578063f7a3080614610180578063feaf968c1461019357600080fd5b806325a0a17a1461008d578063313ce567146100a857806354fd4d50146100bd5780637284e416146100c4575b600080fd5b6100956101a4565b6040519081526020015b60405180910390f35b60015460405160ff909116815260200161009f565b6001610095565b604080518082018252601a81527f4d6f636b2053657175656e63657220557074696d6520466565640000000000006020820152905161009f91906101cb565b610127610111366004610219565b6001805460ff191660ff92909216919091179055565b005b610149610137366004610243565b60025460035491929091908190600090565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a00161009f565b61012761018e36600461026f565b600055565b600254600354600091908083610149565b60006002546000036101ba5760016002556101c4565b6000600255426003555b5060025490565b600060208083528351808285015260005b818110156101f8578581018301518582016040015282016101dc565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561022b57600080fd5b813560ff8116811461023c57600080fd5b9392505050565b60006020828403121561025557600080fd5b813569ffffffffffffffffffff8116811461023c57600080fd5b60006020828403121561028157600080fd5b503591905056fea26469706673582212203fa605e7a0eff4f767a8912a0cc84abc419005f408c08593f41e92331035d4fc64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 766,
        "contract": "contracts/mocks/MockSequencer.sol:MockSequencer",
        "label": "price",
        "offset": 0,
        "slot": "0",
        "type": "t_int256"
      },
      {
        "astId": 768,
        "contract": "contracts/mocks/MockSequencer.sol:MockSequencer",
        "label": "numDecimals",
        "offset": 0,
        "slot": "1",
        "type": "t_uint8"
      },
      {
        "astId": 770,
        "contract": "contracts/mocks/MockSequencer.sol:MockSequencer",
        "label": "sequencerAnswer",
        "offset": 0,
        "slot": "2",
        "type": "t_int256"
      },
      {
        "astId": 772,
        "contract": "contracts/mocks/MockSequencer.sol:MockSequencer",
        "label": "time",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}